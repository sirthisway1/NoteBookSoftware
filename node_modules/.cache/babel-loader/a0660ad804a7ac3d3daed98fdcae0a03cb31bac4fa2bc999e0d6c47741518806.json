{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ce250968\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-item\",\n  id: \"username\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"sidebar-item notebook-button\"\n}, \"笔记本\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"middle-section\"\n};\nconst _hoisted_6 = {\n  class: \"notebook-header\"\n};\nconst _hoisted_7 = {\n  class: \"note-count-container\"\n};\nconst _hoisted_8 = {\n  class: \"note-count\"\n};\nconst _hoisted_9 = {\n  class: \"search-container\"\n};\nconst _hoisted_10 = {\n  class: \"notebook-list\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"pagination\"\n};\nconst _hoisted_13 = {\n  class: \"editor-section\"\n};\nconst _hoisted_14 = {\n  class: \"editor-container\"\n};\nconst _hoisted_15 = {\n  class: \"editor-header\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-tags\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_17 = [_hoisted_16];\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-star\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_19 = [_hoisted_18];\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-lock\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_21 = [_hoisted_20];\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-times\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_23 = [_hoisted_22];\nconst _hoisted_24 = {\n  class: \"editor-body\"\n};\nconst _hoisted_25 = {\n  class: \"editor-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Toolbar = _resolveComponent(\"Toolbar\");\n  const _component_Editor = _resolveComponent(\"Editor\");\n  const _component_CreateNoteModal = _resolveComponent(\"CreateNoteModal\");\n  const _component_TagModal = _resolveComponent(\"TagModal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 左侧侧边栏 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.username), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToStart && $options.goToStart(...args))\n  }, \"开始\"), _hoisted_4, _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToCommunity && $options.goToCommunity(...args))\n  }, \"发现社区\"), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToCommunity && $options.goToCommunity(...args))\n  }, \"标签管理\")]), _createCommentVNode(\" 中间笔记本内容区 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h2\", null, _toDisplayString($data.notebookName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", _hoisted_8, _toDisplayString($data.notes.length) + \"条笔记\", 1 /* TEXT */), _createElementVNode(\"i\", {\n    class: \"fas fa-plus add-note\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.showCreateNoteModal && $options.showCreateNoteModal(...args))\n  })]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"i\", {\n    class: \"fas fa-search search-icon\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.searchNotes && $options.searchNotes(...args))\n  }), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"i\", {\n    class: \"fas fa-times clear-icon\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.clearSearch && $options.clearSearch(...args))\n  })])]), _createElementVNode(\"button\", {\n    class: \"action-button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.backToStart && $options.backToStart(...args))\n  }, \"返回首页\"), _createElementVNode(\"button\", {\n    class: \"action-button\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.backToNotebook && $options.backToNotebook(...args))\n  }, \"目录\"), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notes, (note, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"note-item\", {\n        selected: $data.selectedNote === note\n      }]),\n      onClick: $event => $options.selectNote(note)\n    }, _toDisplayString(note.title), 11 /* TEXT, CLASS, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 若有更多笔记，添加翻页功能 \"), $data.hasMoreNotes ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.prevPage && $options.prevPage(...args))\n  }, \"上一页\"), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.nextPage && $options.nextPage(...args))\n  }, \"下一页\")])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 右侧笔记编辑区 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.noteTitle = $event),\n    placeholder: \"编辑标题\",\n    class: \"title-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.noteTitle]]), _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.tagNote && $options.tagNote(...args))\n  }, [..._hoisted_17]), _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.favoriteNote && $options.favoriteNote(...args))\n  }, [..._hoisted_19]), _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.privateNote && $options.privateNote(...args))\n  }, [..._hoisted_21]), _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.closeEditor && $options.closeEditor(...args))\n  }, [..._hoisted_23])]), _createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_Toolbar, {\n    editor: $data.editorRef,\n    defaultConfig: $data.toolbarConfig,\n    mode: _ctx.mode\n  }, null, 8 /* PROPS */, [\"editor\", \"defaultConfig\", \"mode\"]), _createVNode(_component_Editor, {\n    defaultConfig: $data.editorConfig,\n    mode: _ctx.mode,\n    modelValue: $data.valueHtml,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.valueHtml = $event),\n    class: \"quill-editor\",\n    onOnCreated: $options.handleCreated,\n    onOnChange: $options.handleChange,\n    onOnDestroyed: $options.handleDestroyed,\n    onOnFocus: $options.handleFocus,\n    onOnBlur: $options.handleBlur,\n    onCustomAlert: $options.customAlert,\n    onCustomPaste: $options.customPaste\n  }, null, 8 /* PROPS */, [\"defaultConfig\", \"mode\", \"modelValue\", \"onOnCreated\", \"onOnChange\", \"onOnDestroyed\", \"onOnFocus\", \"onOnBlur\", \"onCustomAlert\", \"onCustomPaste\"])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n    onClick: _cache[17] || (_cache[17] = (...args) => $options.saveNote && $options.saveNote(...args)),\n    class: \"save-button\"\n  }, \"保存\"), _createElementVNode(\"button\", {\n    onClick: _cache[18] || (_cache[18] = (...args) => $options.insertText && $options.insertText(...args))\n  }, \"插入文本\"), _createElementVNode(\"button\", {\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.printHtml && $options.printHtml(...args))\n  }, \"打印 HTML\"), _createElementVNode(\"button\", {\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.disable && $options.disable(...args))\n  }, \"禁用\")])])]), _createCommentVNode(\" 包含模态框组件 \"), _createVNode(_component_CreateNoteModal, {\n    visible: $data.isCreateNoteModalVisible,\n    onClose: $options.hideCreateNoteModal\n  }, null, 8 /* PROPS */, [\"visible\", \"onClose\"])]), _createVNode(_component_TagModal, {\n    visible: $data.isTagModalVisible,\n    tags: $data.selectedNote ? $data.selectedNote.tags : [],\n    onClose: $options.closeTagModal,\n    onUpdateTags: $options.updateTags\n  }, null, 8 /* PROPS */, [\"visible\", \"tags\", \"onClose\", \"onUpdateTags\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","_createElementVNode","key","_hoisted_16","_hoisted_18","_hoisted_20","_hoisted_22","_createElementBlock","_Fragment","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","username","onClick","_cache","args","$options","goToStart","_hoisted_4","goToCommunity","_hoisted_5","_hoisted_6","$data","notebookName","_hoisted_7","_hoisted_8","notes","length","showCreateNoteModal","_hoisted_9","searchNotes","type","$event","searchQuery","clearSearch","backToStart","backToNotebook","_hoisted_10","_renderList","note","index","_normalizeClass","selected","selectedNote","selectNote","title","_hoisted_11","hasMoreNotes","_hoisted_12","prevPage","nextPage","_hoisted_13","_hoisted_14","_hoisted_15","noteTitle","placeholder","tagNote","_hoisted_17","favoriteNote","_hoisted_19","privateNote","_hoisted_21","closeEditor","_hoisted_23","_hoisted_24","_createVNode","_component_Toolbar","editor","editorRef","defaultConfig","toolbarConfig","mode","_component_Editor","editorConfig","modelValue","valueHtml","onOnCreated","handleCreated","onOnChange","handleChange","onOnDestroyed","handleDestroyed","onOnFocus","handleFocus","onOnBlur","handleBlur","onCustomAlert","customAlert","onCustomPaste","customPaste","_hoisted_25","saveNote","insertText","printHtml","disable","_component_CreateNoteModal","visible","isCreateNoteModalVisible","onClose","hideCreateNoteModal","_component_TagModal","isTagModalVisible","tags","closeTagModal","onUpdateTags","updateTags"],"sources":["D:\\VUEitem\\front\\src\\components\\NoteEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- 左侧侧边栏 -->\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-item\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item notebook-button\">笔记本</div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div>\r\n      </div>\r\n      \r\n      <!-- 中间笔记本内容区 -->\r\n      <div class=\"middle-section\">\r\n        <div class=\"notebook-header\">\r\n          <h2>{{ notebookName }}</h2>\r\n          <div class=\"note-count-container\">\r\n            <p class=\"note-count\">{{ notes.length }}条笔记</p>\r\n            <i class=\"fas fa-plus add-note\" @click=\"showCreateNoteModal\"></i>\r\n          </div>\r\n  \r\n          <div class=\"search-container\">\r\n            <i class=\"fas fa-search search-icon\" @click=\"searchNotes\"></i>\r\n            <input type=\"text\" v-model=\"searchQuery\"/>\r\n            <i class=\"fas fa-times clear-icon\" @click=\"clearSearch\"></i>\r\n          </div>\r\n        </div>\r\n        \r\n        <button class=\"action-button\" @click=\"backToStart\">返回首页</button>\r\n        <button class=\"action-button\" @click=\"backToNotebook\">目录</button>\r\n        <div class=\"notebook-list\">\r\n          <div v-for=\"(note, index) in notes\" :key=\"index\" class=\"note-item\" :class=\"{ selected: selectedNote === note }\" @click=\"selectNote(note)\">\r\n            {{ note.title }}\r\n          </div>\r\n          <!-- 若有更多笔记，添加翻页功能 -->\r\n          <div v-if=\"hasMoreNotes\" class=\"pagination\">\r\n            <button @click=\"prevPage\">上一页</button>\r\n            <button @click=\"nextPage\">下一页</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 右侧笔记编辑区 -->\r\n      <div class=\"editor-section\">\r\n        <div class=\"editor-container\">\r\n          <div class=\"editor-header\">\r\n            <input type=\"text\" v-model=\"noteTitle\" placeholder=\"编辑标题\" class=\"title-input\"/>\r\n            <button class=\"icon-button\" @click=\"tagNote\"><i class=\"fas fa-tags\"></i></button>\r\n            <button class=\"icon-button\" @click=\"favoriteNote\"><i class=\"fas fa-star\"></i></button>\r\n            <button class=\"icon-button\" @click=\"privateNote\"><i class=\"fas fa-lock\"></i></button>\r\n            <button class=\"icon-button\" @click=\"closeEditor\"><i class=\"fas fa-times\"></i></button>\r\n          </div>\r\n\r\n       \r\n          <div class=\"editor-body\">\r\n            <Toolbar :editor=\"editorRef\" :defaultConfig=\"toolbarConfig\" :mode=\"mode\" />\r\n            <Editor\r\n              :defaultConfig=\"editorConfig\"\r\n              :mode=\"mode\"\r\n              v-model=\"valueHtml\"\r\n              class=\"quill-editor\"\r\n              @onCreated=\"handleCreated\"\r\n              @onChange=\"handleChange\"\r\n              @onDestroyed=\"handleDestroyed\"\r\n              @onFocus=\"handleFocus\"\r\n              @onBlur=\"handleBlur\"\r\n              @customAlert=\"customAlert\"\r\n              @customPaste=\"customPaste\"\r\n            />\r\n          </div>\r\n          <div class=\"editor-footer\">\r\n            <button @click=\"saveNote\" class=\"save-button\">保存</button>\r\n            <button @click=\"insertText\">插入文本</button>\r\n            <button @click=\"printHtml\">打印 HTML</button>\r\n            <button @click=\"disable\">禁用</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 包含模态框组件 -->\r\n      <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n    </div>\r\n    <TagModal \r\n    :visible=\"isTagModalVisible\" \r\n    :tags=\"selectedNote ? selectedNote.tags : []\"\r\n    @close=\"closeTagModal\"\r\n    @update-tags=\"updateTags\"\r\n  />\r\n</template>\r\n  \r\n  <script>\r\n  import TagModal from './TagModal.vue';\r\n\r\n  import '@wangeditor/editor/dist/css/style.css';\r\n  import { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\r\n  import { Editor, Toolbar } from '@wangeditor/editor-for-vue';\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n  \r\n  export default {\r\n  components: { Editor, Toolbar, CreateNoteModal,TagModal,\r\n  },\r\n  computed: {\r\n  tagsForModal() {\r\n    console.log('Tags for modal:', this.selectedNote ? this.selectedNote.tags : []);\r\n    return this.selectedNote ? this.selectedNote.tags : [];\r\n  },\r\n  notebookId() {\r\n    return this.$route.params.notebookId;\r\n  },\r\n},\r\n  props: {\r\n    id: Number,\r\n    noteName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 笔记相关数据\r\n      notes: [\r\n        { noteId: '1', title: '笔记1', content: '笔记1的内容', tags: ['工作', '会议'] },\r\n        { noteId: '2', title: '笔记2', content: '笔记2的内容', tags: ['学习', '编程'] },\r\n        { noteId: '3', title: '笔记3', content: '笔记3的内容', tags: ['生活', '购物'] },\r\n        { noteId: '4', title: '笔记4', content: '笔记4的内容', tags: ['旅行', '摄影'] },\r\n        { noteId: '5', title: '笔记5', content: '笔记5的内容', tags: ['美食', '烹饪'] },\r\n        { noteId: '6', title: '笔记6', content: '笔记6的内容', tags: ['健康', '运动'] },\r\n      ],\r\n      selectedNote: null,\r\n      hasMoreNotes: false,\r\n      searchQuery: '',\r\n      notebookSummary: '这里是简介',\r\n      notebookName: '这里是笔记本名',\r\n      isCreateNoteModalVisible: false,\r\n      noteTitle: this.$route.params.noteName || '', // 设置默认值\r\n      isTagModalVisible: false,\r\n      isFavorite: false,\r\n      isPrivate: false,\r\n \r\n      \r\n      // 编辑器相关数据\r\n      editorRef: shallowRef(null),\r\n      valueHtml: ref('<p>hello</p>'),\r\n      toolbarConfig: {\r\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"],\r\n      },\r\n      editorConfig: { MENU_CONF: {} },\r\n    };\r\n  },\r\n  methods: {\r\n    selectNote(note) {\r\n      this.selectedNote = note;\r\n      this.$router.push({ name: 'NoteEdit', params: { notebookId: this.notebookId, noteId: note.noteId } });\r\n    },\r\n    async fetchNoteDetails(noteId) {\r\n  try {\r\n    const response = await fetch(`/api/notes/${noteId}`, {\r\n      method: 'GET',\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.code === 200) {\r\n      this.noteContent = data.data.content;\r\n      this.isFavorite = data.data.isFavorite;\r\n      this.isPrivate = data.data.isPrivate;\r\n      this.selectedNote = {\r\n        ...this.selectedNote,\r\n        tags: data.data.tags,\r\n      };\r\n    } else if (data.code === 404) {\r\n      alert('资源不存在');\r\n    } else if (data.code === 501) {\r\n      alert('Token 验证失败');\r\n    } else if (data.code === 405) {\r\n      alert('不合法的请求');\r\n    } else {\r\n      alert(`获取笔记详细信息失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching note details for ID ${noteId}:`, error);\r\n  }\r\n},\r\n    async mounted() {\r\n      const noteId = this.$route.params.noteId;\r\n      if (noteId) {\r\n        await this.fetchNoteDetails(noteId);\r\n      }\r\n    },\r\n    tagNote() {\r\n  if (this.selectedNote) {\r\n    this.isTagModalVisible = true;\r\n  } else {\r\n    alert('请先选择一个笔记');\r\n  }\r\n},\r\nasync favoriteNote() {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/favorite`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.isFavorite = !this.isFavorite;\r\n        alert(this.isFavorite ? '笔记已收藏' : '笔记已取消收藏');\r\n        if (this.isFavorite) {\r\n          this.favoriteNotes.push(this.selectedNote);\r\n        } else {\r\n          this.favoriteNotes = this.favoriteNotes.filter(note => note.noteId !== this.selectedNote.noteId);\r\n        }\r\n      } else {\r\n        alert(`操作失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n      alert('操作失败');\r\n    }\r\n  },\r\n  async privateNote() {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/private`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.isPrivate = !this.isPrivate;\r\n        alert(this.isPrivate ? '笔记已设为私密' : '笔记已设为公开');\r\n        if (this.isPrivate) {\r\n          this.privateNotes.push(this.selectedNote);\r\n        } else {\r\n          this.privateNotes = this.privateNotes.filter(note => note.noteId !== this.selectedNote.noteId);\r\n        }\r\n      } else {\r\n        alert(`操作失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling private:', error);\r\n      alert('操作失败');\r\n    }\r\n  },\r\n   // 新增方法用于关闭标签模态框\r\n   closeTagModal() {\r\n    this.isTagModalVisible = false;\r\n  },\r\n\r\n  updateTags(newTags) {\r\n      if (this.selectedNote) {\r\n        this.selectedNote.tags = newTags;\r\n      }\r\n    },\r\n  // 新增方法用于添加标签\r\n  async addTag(tag) {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ tag }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.selectedNote.tags.push(tag);\r\n        alert('标签添加成功');\r\n      } else {\r\n        alert(`添加标签失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding tag:', error);\r\n      alert('添加标签失败');\r\n    }\r\n  },\r\n    prevPage() {\r\n      // 实现上一页功能\r\n    },\r\n    nextPage() {\r\n      // 实现下一页功能\r\n    },\r\n    showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n    },\r\n    hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n    },\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n    },\r\n    searchNotes() {\r\n      // 实现搜索功能\r\n    },\r\n    goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n    },\r\n    backToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    backToNotebook() {\r\n      this.$router.push({ name: 'Notebook' });\r\n    },\r\n    async fetchNotebookDetails(notebookId) {\r\n      try {\r\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n          method: 'GET',\r\n        });\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.notebookSummary = data.summary;\r\n          this.notebookName = data.name;\r\n          return data.data;\r\n        } else {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchNotebookDetails();\r\n    },\r\n    handleCreated(editor) {\r\n      console.log('created', editor);\r\n      this.editorRef = editor;\r\n    },\r\n    handleChange(editor) {\r\n      console.log('change:', editor.getHtml());\r\n    },\r\n    handleDestroyed(editor) {\r\n      console.log('destroyed', editor);\r\n    },\r\n    handleFocus(editor) {\r\n      console.log('focus', editor);\r\n    },\r\n    handleBlur(editor) {\r\n      console.log('blur', editor);\r\n    },\r\n    customAlert(info, type) {\r\n      alert(`【自定义提示】${type} - ${info}`);\r\n    },\r\n    customPaste(editor, event, callback) {\r\n      console.log('ClipboardEvent 粘贴事件对象', event);\r\n      editor.insertText('');\r\n      callback(true);\r\n    },\r\n    insertText() {\r\n      if (this.editorRef) {\r\n        this.editorRef.insertText('hello world');\r\n      }\r\n    },\r\n    printHtml() {\r\n      if (this.editorRef) {\r\n        console.log(this.editorRef.getHtml());\r\n      }\r\n    },\r\n    disable() {\r\n      if (this.editorRef) {\r\n        this.editorRef.disable();\r\n      }\r\n    },\r\n\r\n    //添加笔记，POST请求\r\n    // 更新笔记，PUT请求\r\nasync saveNote() {\r\n  if (!this.selectedNote) {\r\n    alert('没有选中任何笔记');\r\n    return;\r\n  }\r\n\r\n  const noteId = this.selectedNote.noteId; // 从选中的笔记中获取ID\r\n  const title = this.noteTitle; // 从输入框获取标题\r\n  const content = this.valueHtml; // 从编辑器获取内容\r\n  const tags = this.selectedNote.tags || []; // 假设标签可以从编辑界面某处获取\r\n\r\n  const payload = {\r\n    title,\r\n    content,\r\n    tags\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`/api/notes/${noteId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    switch (data.code) {\r\n      case 200:\r\n        alert('笔记更新成功');\r\n        this.$router.push({ name: 'NoteDetail', params: { id: noteId } }); // 假设有一个笔记详情路由\r\n        break;\r\n      case 501:\r\n        alert('token 验证失败');\r\n        break;\r\n      case 405:\r\n        alert('不合法的请求');\r\n        break;\r\n      case 404:\r\n        alert('笔记不存在');\r\n        break;\r\n      default:\r\n        alert(`更新笔记失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating note:', error);\r\n    alert('更新笔记时出现错误');\r\n  }\r\n},\r\n\r\n    closeEditor() {\r\n      this.$router.push({ name: 'NoteDetail' });\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.fetchNotebookDetails();\r\n  },\r\n  watch: {\r\n    '$route.params.noteId': 'fetchNoteDetail'\r\n  }\r\n};\r\n\r\n  </script>\r\n  \r\n\r\n\r\n<style scoped>\r\n\r\n\r\n\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* 左侧侧边栏样式 */\r\n  .sidebar {\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-right: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.sidebar-item {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  cursor: pointer;\r\n  color: #333;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n  \r\n.notebook-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  margin: 10px 20px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.notebook-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n  \r\n  .note-count-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .note-count {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  \r\n  .add-note {\r\n    cursor: pointer;\r\n    font-size: 1.2em;\r\n    color: #000000; /* 可根据需要修改颜色 */\r\n  }\r\n  \r\n  .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #b0b0b0;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .sidebar-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  /* 中间笔记本内容区样式 */\r\n .middle-section {\r\n  width: 200px; /* 具体宽度 */\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #000000;\r\n}\r\n  \r\n  .notebook-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    background-color: #fff;\r\n  }\r\n  \r\n  .search-container input {\r\n    border: none;\r\n    outline: none;\r\n    flex-grow: 1;\r\n    padding-left: 25px; /* 为左侧图标留出空间 */\r\n    padding-right: 2px; /* 为右侧图标留出空间 */\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .clear-icon {\r\n    position: absolute;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  .notebook-list {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .note-item {\r\n    padding: 30px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .note-item.selected {\r\n    background-color: #a0e0a0;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n    /* 右侧笔记编辑区样式 */\r\n    .editor-section {\r\n    flex-grow: 1; /* 确保右侧编辑区占据剩余空间 */\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .editor-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n\r\n \r\n  \r\n  .editor-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 10px;\r\n  }\r\n  \r\n  .title-input {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .icon-button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .editor-body {\r\n    flex-grow: 1; /* 让编辑器主体部分占据剩余空间 */\r\n    overflow-y: auto; /* 防止内容过多时溢出 */\r\n  }\r\n  \r\n  .editor-toolbar {\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .quill-editor {\r\n    height: 400px;\r\n  }\r\n  \r\n  .editor-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .save-button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .save-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n\r\n  .tag-modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.tag-modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  max-width: 500px;\r\n  width: 90%;\r\n}\r\n</style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}