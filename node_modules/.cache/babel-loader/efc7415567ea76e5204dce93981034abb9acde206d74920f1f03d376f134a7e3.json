{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    visible: Boolean\n  },\n  data() {\n    return {\n      //notebooks[];\n      //下为测试数据\n      notebooks: [{\n        noteId: 1,\n        name: 'Notebook 1',\n        summary: 'This is the first notebook',\n        lastModified: '2023-06-01T12:00:00Z'\n      }, {\n        id: 2,\n        name: 'Notebook 2',\n        summary: 'This is the second notebook',\n        lastModified: '2023-06-02T12:00:00Z'\n      }, {\n        id: 3,\n        name: 'Notebook 3',\n        summary: 'This is the third notebook',\n        lastModified: '2023-06-03T12:00:00Z'\n      }, {\n        id: 4,\n        name: 'Notebook 4',\n        summary: 'This is the fourth notebook',\n        lastModified: '2023-06-04T12:00:00Z'\n      }, {\n        id: 5,\n        name: 'Notebook 5',\n        summary: 'This is the fifth notebook',\n        lastModified: '2023-06-05T12:00:00Z'\n      }, {\n        id: 6,\n        name: 'Notebook 6',\n        summary: 'This is the sixth notebook',\n        lastModified: '2023-06-06T12:00:00Z'\n      }],\n      selectedNotebook: '',\n      noteName: ''\n    };\n  },\n  methods: {\n    // async fetchNotebooks() {\n    // const token = localStorage.getItem('token');\n    // if (!token) {\n    //   alert('请先登录');\n    //   return;\n    // }\n\n    //   try {\n    //     const response = await fetch('/api/notebooks', {\n    //       method: 'GET',\n    //       headers: {\n    //         'Authorization': `Bearer ${token}`\n    //       }\n    //     });\n\n    //     const data = await response.json();\n    //     if (data.code === 200) {\n    //       const notebookIds = data.data.notebookIds;\n    //       this.notebooks = await Promise.all(notebookIds.map(id => this.fetchNotebookDetails(id)));\n    //     } else {\n    //       alert('获取笔记本ID列表失败');\n    //     }\n    //   } catch (error) {\n    //     console.error('获取笔记本ID列表时出错:', error);\n    //   }\n    // },\n    // async fetchNotebookDetails(notebookId) {\n    //   const token = localStorage.getItem('token');\n    //   try {\n    //     const response = await fetch(`/api/notebooks/${notebookId}`, {\n    //       method: 'GET',\n    //       headers: {\n    //         'Authorization': `Bearer ${token}`\n    //       }\n    //     });\n\n    //     const data = await response.json();\n    //     if (data.code === 200) {\n    //       return data.data;\n    //     } else if (data.code === 405) {\n    //       alert(`获取笔记本详细信息失败: ${data.message}`);\n    //       return null;\n    //     } else {\n    //       alert(`获取笔记本详细信息失败: ${data.message}`);\n    //       return null;\n    //     }\n    //   } catch (error) {\n    //     console.error(`获取ID为 ${notebookId} 的笔记本详情时出错:`, error);\n    //     return null;\n    //   }\n    // },\n    closeModal() {\n      this.$emit('close');\n    },\n    confirm() {\n      console.log('选择的笔记本:', this.selectedNotebook);\n      console.log('笔记名称:', this.noteName);\n      const notebook = this.notebooks.find(n => n.name === this.selectedNotebook);\n      if (notebook) {\n        this.$emit('close');\n        this.$router.push({\n          name: 'NoteCreate',\n          params: {\n            id: notebook.id,\n            noteName: this.noteName\n          }\n        });\n      }\n    }\n  }\n  //正式运行时，必须重新调用这个钩子\n  // mounted() {\n  //   this.fetchNotebooks();\n  // },\n};","map":{"version":3,"names":["props","visible","Boolean","data","notebooks","noteId","name","summary","lastModified","id","selectedNotebook","noteName","methods","closeModal","$emit","confirm","console","log","notebook","find","n","$router","push","params"],"sources":["D:\\VUEitem\\front\\src\\components\\CreateNoteModal.vue"],"sourcesContent":["<!-- 新建笔记的弹窗 -->\r\n\r\n<template>\r\n  <div v-if=\"visible\" class=\"modal-overlay\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h3>新建笔记</h3>\r\n        <button class=\"close-button\" @click=\"closeModal\">✖</button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <label>请选择笔记本:</label>\r\n          <select v-model=\"selectedNotebook\">\r\n            <option v-for=\"notebook in notebooks\" :key=\"notebook.id\" :value=\"notebook.name\">\r\n              {{ notebook.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>输入笔记名称:</label>\r\n          <input type=\"text\" v-model=\"noteName\">\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button class=\"confirm-button\" @click=\"confirm\">确认</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    visible: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      //notebooks[];\r\n      //下为测试数据\r\n      notebooks:[\r\n      { noteId: 1, name: 'Notebook 1', summary: 'This is the first notebook', lastModified: '2023-06-01T12:00:00Z' },\r\n      { id: 2, name: 'Notebook 2', summary: 'This is the second notebook', lastModified: '2023-06-02T12:00:00Z' },\r\n      { id: 3, name: 'Notebook 3', summary: 'This is the third notebook', lastModified: '2023-06-03T12:00:00Z' },\r\n      { id: 4, name: 'Notebook 4', summary: 'This is the fourth notebook', lastModified: '2023-06-04T12:00:00Z' },\r\n      { id: 5, name: 'Notebook 5', summary: 'This is the fifth notebook', lastModified: '2023-06-05T12:00:00Z' },\r\n      { id: 6, name: 'Notebook 6', summary: 'This is the sixth notebook', lastModified: '2023-06-06T12:00:00Z' },\r\n      ],\r\n      selectedNotebook: '',\r\n      noteName: '',\r\n    };\r\n  },\r\n  methods: {\r\n    // async fetchNotebooks() {\r\n      // const token = localStorage.getItem('token');\r\n      // if (!token) {\r\n      //   alert('请先登录');\r\n      //   return;\r\n      // }\r\n\r\n    //   try {\r\n    //     const response = await fetch('/api/notebooks', {\r\n    //       method: 'GET',\r\n    //       headers: {\r\n    //         'Authorization': `Bearer ${token}`\r\n    //       }\r\n    //     });\r\n\r\n    //     const data = await response.json();\r\n    //     if (data.code === 200) {\r\n    //       const notebookIds = data.data.notebookIds;\r\n    //       this.notebooks = await Promise.all(notebookIds.map(id => this.fetchNotebookDetails(id)));\r\n    //     } else {\r\n    //       alert('获取笔记本ID列表失败');\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('获取笔记本ID列表时出错:', error);\r\n    //   }\r\n    // },\r\n    // async fetchNotebookDetails(notebookId) {\r\n    //   const token = localStorage.getItem('token');\r\n    //   try {\r\n    //     const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n    //       method: 'GET',\r\n    //       headers: {\r\n    //         'Authorization': `Bearer ${token}`\r\n    //       }\r\n    //     });\r\n\r\n    //     const data = await response.json();\r\n    //     if (data.code === 200) {\r\n    //       return data.data;\r\n    //     } else if (data.code === 405) {\r\n    //       alert(`获取笔记本详细信息失败: ${data.message}`);\r\n    //       return null;\r\n    //     } else {\r\n    //       alert(`获取笔记本详细信息失败: ${data.message}`);\r\n    //       return null;\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(`获取ID为 ${notebookId} 的笔记本详情时出错:`, error);\r\n    //     return null;\r\n    //   }\r\n    // },\r\n    closeModal() {\r\n      this.$emit('close');\r\n    },\r\n    confirm() {\r\n    console.log('选择的笔记本:', this.selectedNotebook);\r\n    console.log('笔记名称:', this.noteName);\r\n\r\n    const notebook = this.notebooks.find(n => n.name === this.selectedNotebook);\r\n    if (notebook) {\r\n      this.$emit('close');\r\n      this.$router.push({ name: 'NoteCreate', params: { id: notebook.id, noteName: this.noteName } });\r\n    }\r\n  }\r\n\r\n\r\n  },\r\n  //正式运行时，必须重新调用这个钩子\r\n  // mounted() {\r\n  //   this.fetchNotebooks();\r\n  // },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  max-width: 100%;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-body {\r\n  margin-top: 10px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-group select,\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-footer {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.confirm-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.confirm-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";AA+BA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC;EACX,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACA;MACAC,SAAS,EAAC,CACV;QAAEC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,YAAY,EAAE;MAAuB,CAAC,EAC9G;QAAEC,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,6BAA6B;QAAEC,YAAY,EAAE;MAAuB,CAAC,EAC3G;QAAEC,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,YAAY,EAAE;MAAuB,CAAC,EAC1G;QAAEC,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,6BAA6B;QAAEC,YAAY,EAAE;MAAuB,CAAC,EAC3G;QAAEC,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,YAAY,EAAE;MAAuB,CAAC,EAC1G;QAAEC,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,YAAY,EAAE;MAAuB,CAAC,CACzG;MACDE,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACE;IACA;IACA;IACA;IACA;;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IACDC,OAAOA,CAAA,EAAG;MACVC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,gBAAgB,CAAC;MAC7CM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACN,QAAQ,CAAC;MAEnC,MAAMO,QAAO,GAAI,IAAI,CAACd,SAAS,CAACe,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACd,IAAG,KAAM,IAAI,CAACI,gBAAgB,CAAC;MAC3E,IAAIQ,QAAQ,EAAE;QACZ,IAAI,CAACJ,KAAK,CAAC,OAAO,CAAC;QACnB,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;UAAEhB,IAAI,EAAE,YAAY;UAAEiB,MAAM,EAAE;YAAEd,EAAE,EAAES,QAAQ,CAACT,EAAE;YAAEE,QAAQ,EAAE,IAAI,CAACA;UAAS;QAAE,CAAC,CAAC;MACjG;IACF;EAGA;EACA;EACA;EACA;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}