{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TagModal from './TagModal.vue';\nimport '@wangeditor/editor/dist/css/style.css';\nimport { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport CreateNoteModal from './CreateNoteModal.vue';\nexport default {\n  components: {\n    Editor,\n    Toolbar,\n    CreateNoteModal,\n    TagModal\n  },\n  computed: {\n    tagsForModal() {\n      console.log('Tags for modal:', this.selectedNote ? this.selectedNote.tags : []);\n      return this.selectedNote ? this.selectedNote.tags : [];\n    },\n    notebookId() {\n      return this.$route.params.notebookId;\n    },\n    noteContent() {\n      return this.$route.params.noteContent;\n    }\n  },\n  props: {\n    id: Number,\n    noteName: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      // 笔记相关数据\n      notes: [{\n        noteId: '1',\n        title: '笔记1',\n        content: '笔记1的内容',\n        tags: ['工作', '会议']\n      }, {\n        noteId: '2',\n        title: '笔记2',\n        content: '笔记2的内容',\n        tags: ['学习', '编程']\n      }, {\n        noteId: '3',\n        title: '笔记3',\n        content: '笔记3的内容',\n        tags: ['生活', '购物']\n      }, {\n        noteId: '4',\n        title: '笔记4',\n        content: '笔记4的内容',\n        tags: ['旅行', '摄影']\n      }, {\n        noteId: '5',\n        title: '笔记5',\n        content: '笔记5的内容',\n        tags: ['美食', '烹饪']\n      }, {\n        noteId: '6',\n        title: '笔记6',\n        content: '笔记6的内容',\n        tags: ['健康', '运动']\n      }],\n      selectedNote: null,\n      hasMoreNotes: false,\n      searchQuery: '',\n      notebookSummary: '这里是简介',\n      notebookName: '这里是笔记本名',\n      isCreateNoteModalVisible: false,\n      noteTitle: this.$route.params.noteName || '',\n      // 设置默认值\n      isTagModalVisible: false,\n      // isFavorite: false,\n      isPrivate: false,\n      // 编辑器相关数据\n      editorRef: shallowRef(null),\n      valueHtml: ref('<p>hello</p>'),\n      toolbarConfig: {\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"]\n      },\n      editorConfig: {\n        MENU_CONF: {}\n      }\n    };\n  },\n  methods: {\n    selectNote(note) {\n      this.selectedNote = note;\n      this.$router.push({\n        name: 'NoteEdit',\n        params: {\n          notebookId: this.notebookId,\n          noteId: note.noteId\n        }\n      });\n    },\n    async fetchNoteDetails(noteId) {\n      try {\n        const response = await fetch(`/api/notes/${noteId}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.noteContent = data.data.content;\n          this.isFavorite = data.data.isFavorite;\n          this.isPrivate = data.data.isPrivate;\n          this.selectedNote = {\n            ...this.selectedNote,\n            tags: data.data.tags\n          };\n        } else if (data.code === 404) {\n          alert('资源不存在');\n        } else if (data.code === 501) {\n          alert('Token 验证失败');\n        } else if (data.code === 405) {\n          alert('不合法的请求');\n        } else {\n          alert(`获取笔记详细信息失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error(`Error fetching note details for ID ${noteId}:`, error);\n      }\n    },\n    async mounted() {\n      const noteId = this.$route.params.noteId;\n      if (noteId) {\n        await this.fetchNoteDetails(noteId);\n      }\n    },\n    tagNote() {\n      if (this.selectedNote) {\n        this.isTagModalVisible = true;\n      } else {\n        alert('请先选择一个笔记');\n      }\n    },\n    async favoriteNote() {\n      try {\n        const response = await fetch(`/api/notes/${this.selectedNote.noteId}/favorite`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.isFavorite = !this.isFavorite;\n          alert(this.isFavorite ? '笔记已收藏' : '笔记已取消收藏');\n          if (this.isFavorite) {\n            this.favoriteNotes.push(this.selectedNote);\n          } else {\n            this.favoriteNotes = this.favoriteNotes.filter(note => note.noteId !== this.selectedNote.noteId);\n          }\n        } else {\n          alert(`操作失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error toggling favorite:', error);\n        alert('操作失败');\n      }\n    },\n    async privateNote() {\n      try {\n        const response = await fetch(`/api/notes/${this.selectedNote.noteId}/private`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.isPrivate = !this.isPrivate;\n          alert(this.isPrivate ? '笔记已设为私密' : '笔记已设为公开');\n          if (this.isPrivate) {\n            this.privateNotes.push(this.selectedNote);\n          } else {\n            this.privateNotes = this.privateNotes.filter(note => note.noteId !== this.selectedNote.noteId);\n          }\n        } else {\n          alert(`操作失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error toggling private:', error);\n        alert('操作失败');\n        ``;\n      }\n    },\n    // 新增方法用于关闭标签模态框\n    closeTagModal() {\n      this.isTagModalVisible = false;\n    },\n    updateTags(newTags) {\n      if (this.selectedNote) {\n        this.selectedNote.tags = newTags;\n      }\n    },\n    // 新增方法用于添加标签\n    async addTag(tag) {\n      try {\n        const response = await fetch(`/api/notes/${this.selectedNote.noteId}/tags`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            tag\n          })\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.selectedNote.tags.push(tag);\n          alert('标签添加成功');\n        } else {\n          alert(`添加标签失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error adding tag:', error);\n        alert('添加标签失败');\n      }\n    },\n    prevPage() {\n      // 实现上一页功能\n    },\n    nextPage() {\n      // 实现下一页功能\n    },\n    showCreateNoteModal() {\n      this.isCreateNoteModalVisible = true;\n    },\n    hideCreateNoteModal() {\n      this.isCreateNoteModalVisible = false;\n    },\n    clearSearch() {\n      this.searchQuery = '';\n    },\n    searchNotes() {\n      // 实现搜索功能\n    },\n    goToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    goToCommunity() {\n      this.$router.push({\n        name: 'Community'\n      });\n    },\n    backToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    backToNotebook() {\n      this.$router.push({\n        name: 'Notebook'\n      });\n    },\n    async fetchNotebookDetails(notebookId) {\n      try {\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.notebookSummary = data.summary;\n          this.notebookName = data.name;\n          return data.data;\n        } else {\n          alert(`获取笔记本详细信息失败: ${data.message}`);\n          return null;\n        }\n      } catch (error) {\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\n        return null;\n      }\n    },\n    async mounted() {\n      await this.fetchNotebookDetails();\n    },\n    handleCreated(editor) {\n      console.log('created', editor);\n      this.editorRef = editor;\n    },\n    handleChange(editor) {\n      console.log('change:', editor.getHtml());\n    },\n    handleDestroyed(editor) {\n      console.log('destroyed', editor);\n    },\n    handleFocus(editor) {\n      console.log('focus', editor);\n    },\n    handleBlur(editor) {\n      console.log('blur', editor);\n    },\n    customAlert(info, type) {\n      alert(`【自定义提示】${type} - ${info}`);\n    },\n    customPaste(editor, event, callback) {\n      console.log('ClipboardEvent 粘贴事件对象', event);\n      editor.insertText('');\n      callback(true);\n    },\n    insertText() {\n      if (this.editorRef) {\n        this.editorRef.insertText('hello world');\n      }\n    },\n    printHtml() {\n      if (this.editorRef) {\n        console.log(this.editorRef.getHtml());\n      }\n    },\n    disable() {\n      if (this.editorRef) {\n        this.editorRef.disable();\n      }\n    },\n    //添加笔记，POST请求\n    // 更新笔记，PUT请求\n    async saveNote() {\n      if (!this.selectedNote) {\n        alert('没有选中任何笔记');\n        return;\n      }\n      const noteId = this.selectedNote.noteId; // 从选中的笔记中获取ID\n      const title = this.noteTitle; // 从输入框获取标题\n      const content = this.valueHtml; // 从编辑器获取内容\n      const tags = this.selectedNote.tags || []; // 假设标签可以从编辑界面某处获取\n\n      const payload = {\n        title,\n        content,\n        tags\n      };\n      try {\n        const response = await fetch(`/api/notes/${noteId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await response.json();\n        switch (data.code) {\n          case 200:\n            alert('笔记更新成功');\n            this.$router.push({\n              name: 'NoteDetail',\n              params: {\n                id: noteId\n              }\n            }); // 假设有一个笔记详情路由\n            break;\n          case 501:\n            alert('token 验证失败');\n            break;\n          case 405:\n            alert('不合法的请求');\n            break;\n          case 404:\n            alert('笔记不存在');\n            break;\n          default:\n            alert(`更新笔记失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error updating note:', error);\n        alert('更新笔记时出现错误');\n      }\n    },\n    closeEditor() {\n      this.$router.push({\n        name: 'NoteDetail'\n      });\n    }\n  },\n  async mounted() {\n    await this.fetchNotebookDetails();\n  },\n  watch: {\n    '$route.params.noteId': 'fetchNoteDetail'\n  }\n};","map":{"version":3,"names":["TagModal","onBeforeUnmount","ref","shallowRef","onMounted","Editor","Toolbar","CreateNoteModal","components","computed","tagsForModal","console","log","selectedNote","tags","notebookId","$route","params","noteContent","props","id","Number","noteName","type","String","default","data","notes","noteId","title","content","hasMoreNotes","searchQuery","notebookSummary","notebookName","isCreateNoteModalVisible","noteTitle","isTagModalVisible","isPrivate","editorRef","valueHtml","toolbarConfig","excludeKeys","editorConfig","MENU_CONF","methods","selectNote","note","$router","push","name","fetchNoteDetails","response","fetch","method","json","code","isFavorite","alert","message","error","mounted","tagNote","favoriteNote","headers","favoriteNotes","filter","privateNote","privateNotes","closeTagModal","updateTags","newTags","addTag","tag","body","JSON","stringify","prevPage","nextPage","showCreateNoteModal","hideCreateNoteModal","clearSearch","searchNotes","goToStart","goToCommunity","backToStart","backToNotebook","fetchNotebookDetails","summary","handleCreated","editor","handleChange","getHtml","handleDestroyed","handleFocus","handleBlur","customAlert","info","customPaste","event","callback","insertText","printHtml","disable","saveNote","payload","closeEditor","watch"],"sources":["D:\\VUEitem\\front\\src\\components\\NoteEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- 左侧侧边栏 -->\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-item\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item notebook-button\">\r\n        <div class=\"icon-placeholder\"><img src=\"/vue图片/图片2.png\" alt=\"开始图标\" class=\"icon-image\"></div>\r\n        <span>笔记本</span>\r\n      </div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n        <!-- <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div> -->\r\n      </div>\r\n      \r\n       \r\n      <!-- 右侧笔记编辑区 -->\r\n      <div class=\"editor-section\">\r\n        <div class=\"editor-container\">\r\n          <div class=\"editor-header\">\r\n            <input type=\"text\" v-model=\"noteTitle\" placeholder=\"编辑标题\" class=\"title-input\"/>\r\n            <button class=\"icon-button\" @click=\"tagNote\"><i class=\"fas fa-tags\"></i></button>\r\n            <!-- <button class=\"icon-button\" @click=\"favoriteNote\"><i class=\"fas fa-star\"></i></button> -->\r\n            <button class=\"icon-button\" @click=\"privateNote\"><i class=\"fas fa-lock\"></i></button>\r\n            <button class=\"icon-button\" @click=\"closeEditor\"><i class=\"fas fa-times\"></i></button>\r\n          </div>\r\n\r\n       \r\n          <div class=\"editor-body\">\r\n            <Toolbar :editor=\"editorRef\" :defaultConfig=\"toolbarConfig\" :mode=\"mode\" />\r\n            <Editor\r\n              :defaultConfig=\"editorConfig\"\r\n              :mode=\"mode\"\r\n              v-model=\"valueHtml\"\r\n              class=\"quill-editor\"\r\n              @onCreated=\"handleCreated\"\r\n              @onChange=\"handleChange\"\r\n              @onDestroyed=\"handleDestroyed\"\r\n              @onFocus=\"handleFocus\"\r\n              @onBlur=\"handleBlur\"\r\n              @customAlert=\"customAlert\"\r\n              @customPaste=\"customPaste\"\r\n            />\r\n          </div>\r\n          <div class=\"editor-footer\">\r\n            <button @click=\"saveNote\" class=\"save-button\">保存</button>\r\n            <button @click=\"insertText\">插入文本</button>\r\n            <button @click=\"printHtml\">打印 HTML</button>\r\n            <button @click=\"disable\">禁用</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 包含模态框组件 -->\r\n      <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n    </div>\r\n    <TagModal \r\n    :visible=\"isTagModalVisible\" \r\n    :tags=\"selectedNote ? selectedNote.tags : []\"\r\n    @close=\"closeTagModal\"\r\n    @update-tags=\"updateTags\"\r\n  />\r\n</template>\r\n  \r\n  <script>\r\n  import TagModal from './TagModal.vue';\r\n\r\n  import '@wangeditor/editor/dist/css/style.css';\r\n  import { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\r\n  import { Editor, Toolbar } from '@wangeditor/editor-for-vue';\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n  \r\n  export default {\r\n  components: { Editor, Toolbar, CreateNoteModal,TagModal,\r\n  },\r\n  computed: {\r\n  tagsForModal() {\r\n    console.log('Tags for modal:', this.selectedNote ? this.selectedNote.tags : []);\r\n    return this.selectedNote ? this.selectedNote.tags : [];\r\n  },\r\n  notebookId() {\r\n    return this.$route.params.notebookId;\r\n  },\r\n  noteContent(){\r\n    return this.$route.params.noteContent;\r\n  }\r\n},\r\n  props: {\r\n    id: Number,\r\n    noteName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 笔记相关数据\r\n      notes: [{ noteId: '1', title: '笔记1', content: '笔记1的内容', tags: ['工作', '会议'] },\r\n        { noteId: '2', title: '笔记2', content: '笔记2的内容', tags: ['学习', '编程'] },\r\n        { noteId: '3', title: '笔记3', content: '笔记3的内容', tags: ['生活', '购物'] },\r\n        { noteId: '4', title: '笔记4', content: '笔记4的内容', tags: ['旅行', '摄影'] },\r\n        \r\n        { noteId: '5', title: '笔记5', content: '笔记5的内容', tags: ['美食', '烹饪'] },\r\n        { noteId: '6', title: '笔记6', content: '笔记6的内容', tags: ['健康', '运动'] },\r\n      ],\r\n      selectedNote: null,\r\n      hasMoreNotes: false,\r\n      searchQuery: '',\r\n      notebookSummary: '这里是简介',\r\n      notebookName: '这里是笔记本名',\r\n      isCreateNoteModalVisible: false,\r\n      noteTitle: this.$route.params.noteName || '', // 设置默认值\r\n      isTagModalVisible: false,\r\n      // isFavorite: false,\r\n      isPrivate: false,\r\n      \r\n      \r\n      // 编辑器相关数据\r\n      editorRef: shallowRef(null),\r\n      valueHtml: ref('<p>hello</p>'),\r\n      toolbarConfig: {\r\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"],\r\n      },\r\n      editorConfig: { MENU_CONF: {} },\r\n    };\r\n  },\r\n  methods: {\r\n    selectNote(note) {\r\n      this.selectedNote = note;\r\n      this.$router.push({ name: 'NoteEdit', params: { notebookId: this.notebookId, noteId: note.noteId } });\r\n    },\r\n    async fetchNoteDetails(noteId) {\r\n  try {\r\n    const response = await fetch(`/api/notes/${noteId}`, {\r\n      method: 'GET',\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.code === 200) {\r\n      this.noteContent = data.data.content;\r\n      this.isFavorite = data.data.isFavorite;\r\n      this.isPrivate = data.data.isPrivate;\r\n      this.selectedNote = {\r\n        ...this.selectedNote,\r\n        tags: data.data.tags,\r\n      };\r\n    } else if (data.code === 404) {\r\n      alert('资源不存在');\r\n    } else if (data.code === 501) {\r\n      alert('Token 验证失败');\r\n    } else if (data.code === 405) {\r\n      alert('不合法的请求');\r\n    } else {\r\n      alert(`获取笔记详细信息失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching note details for ID ${noteId}:`, error);\r\n  }\r\n},\r\n    async mounted() {\r\n      const noteId = this.$route.params.noteId;\r\n      if (noteId) {\r\n        await this.fetchNoteDetails(noteId);\r\n      }\r\n    },\r\n    tagNote() {\r\n  if (this.selectedNote) {\r\n    this.isTagModalVisible = true;\r\n  } else {\r\n    alert('请先选择一个笔记');\r\n  }\r\n},\r\nasync favoriteNote() {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/favorite`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.isFavorite = !this.isFavorite;\r\n        alert(this.isFavorite ? '笔记已收藏' : '笔记已取消收藏');\r\n        if (this.isFavorite) {\r\n          this.favoriteNotes.push(this.selectedNote);\r\n        } else {\r\n          this.favoriteNotes = this.favoriteNotes.filter(note => note.noteId !== this.selectedNote.noteId);\r\n        }\r\n      } else {\r\n        alert(`操作失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n      alert('操作失败');\r\n    }\r\n  },\r\n  async privateNote() {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/private`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.isPrivate = !this.isPrivate;\r\n        alert(this.isPrivate ? '笔记已设为私密' : '笔记已设为公开');\r\n        if (this.isPrivate) {\r\n          this.privateNotes.push(this.selectedNote);\r\n        } else {\r\n          this.privateNotes = this.privateNotes.filter(note => note.noteId !== this.selectedNote.noteId);\r\n        }\r\n      } else {\r\n        alert(`操作失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling private:', error);\r\n      alert('操作失败');``\r\n    }\r\n  },\r\n   // 新增方法用于关闭标签模态框\r\n   closeTagModal() {\r\n    this.isTagModalVisible = false;\r\n  },\r\n\r\n  updateTags(newTags) {\r\n      if (this.selectedNote) {\r\n        this.selectedNote.tags = newTags;\r\n      }\r\n    },\r\n  // 新增方法用于添加标签\r\n  async addTag(tag) {\r\n    try {\r\n      const response = await fetch(`/api/notes/${this.selectedNote.noteId}/tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ tag }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.code === 200) {\r\n        this.selectedNote.tags.push(tag);\r\n        alert('标签添加成功');\r\n      } else {\r\n        alert(`添加标签失败: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding tag:', error);\r\n      alert('添加标签失败');\r\n    }\r\n  },\r\n    prevPage() {\r\n      // 实现上一页功能\r\n    },\r\n    nextPage() {\r\n      // 实现下一页功能\r\n    },\r\n    showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n    },\r\n    hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n    },\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n    },\r\n    searchNotes() {\r\n      // 实现搜索功能\r\n    },\r\n    goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n    },\r\n    backToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    backToNotebook() {\r\n      this.$router.push({ name: 'Notebook' });\r\n    },\r\n    async fetchNotebookDetails(notebookId) {\r\n      try {\r\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n          method: 'GET',\r\n        });\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.notebookSummary = data.summary;\r\n          this.notebookName = data.name;\r\n          return data.data;\r\n        } else {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchNotebookDetails();\r\n    },\r\n    handleCreated(editor) {\r\n      console.log('created', editor);\r\n      this.editorRef = editor;\r\n    },\r\n    handleChange(editor) {\r\n      console.log('change:', editor.getHtml());\r\n    },\r\n    handleDestroyed(editor) {\r\n      console.log('destroyed', editor);\r\n    },\r\n    handleFocus(editor) {\r\n      console.log('focus', editor);\r\n    },\r\n    handleBlur(editor) {\r\n      console.log('blur', editor);\r\n    },\r\n    customAlert(info, type) {\r\n      alert(`【自定义提示】${type} - ${info}`);\r\n    },\r\n    customPaste(editor, event, callback) {\r\n      console.log('ClipboardEvent 粘贴事件对象', event);\r\n      editor.insertText('');\r\n      callback(true);\r\n    },\r\n    insertText() {\r\n      if (this.editorRef) {\r\n        this.editorRef.insertText('hello world');\r\n      }\r\n    },\r\n    printHtml() {\r\n      if (this.editorRef) {\r\n        console.log(this.editorRef.getHtml());\r\n      }\r\n    },\r\n    disable() {\r\n      if (this.editorRef) {\r\n        this.editorRef.disable();\r\n      }\r\n    },\r\n\r\n    //添加笔记，POST请求\r\n    // 更新笔记，PUT请求\r\nasync saveNote() {\r\n  if (!this.selectedNote) {\r\n    alert('没有选中任何笔记');\r\n    return;\r\n  }\r\n\r\n  const noteId = this.selectedNote.noteId; // 从选中的笔记中获取ID\r\n  const title = this.noteTitle; // 从输入框获取标题\r\n  const content = this.valueHtml; // 从编辑器获取内容\r\n  const tags = this.selectedNote.tags || []; // 假设标签可以从编辑界面某处获取\r\n\r\n  const payload = {\r\n    title,\r\n    content,\r\n    tags\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`/api/notes/${noteId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    switch (data.code) {\r\n      case 200:\r\n        alert('笔记更新成功');\r\n        this.$router.push({ name: 'NoteDetail', params: { id: noteId } }); // 假设有一个笔记详情路由\r\n        break;\r\n      case 501:\r\n        alert('token 验证失败');\r\n        break;\r\n      case 405:\r\n        alert('不合法的请求');\r\n        break;\r\n      case 404:\r\n        alert('笔记不存在');\r\n        break;\r\n      default:\r\n        alert(`更新笔记失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating note:', error);\r\n    alert('更新笔记时出现错误');\r\n  }\r\n},\r\n\r\n    closeEditor() {\r\n      this.$router.push({ name: 'NoteDetail' });\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.fetchNotebookDetails();\r\n  },\r\n  watch: {\r\n    '$route.params.noteId': 'fetchNoteDetail'\r\n  }\r\n};\r\n\r\n  </script>\r\n  \r\n\r\n\r\n  <style scoped>\r\n\r\n\r\n\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* 左侧侧边栏样式 */\r\n  .sidebar {\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-right: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.sidebar-item {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  cursor: pointer;\r\n  color: #333;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n  \r\n.sidebar-username {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.notebook-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  margin: 10px 20px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.notebook-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n  \r\n  .note-count-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .note-count {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  \r\n  .add-note {\r\n    cursor: pointer;\r\n    font-size: 1.2em;\r\n    color: #000000; /* 可根据需要修改颜色 */\r\n  }\r\n  \r\n  .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #b0b0b0;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 确保图片填满圆形且不变形 */\r\n}\r\n\r\n\r\n  .sidebar-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  /* 中间笔记本内容区样式 */\r\n .middle-section {\r\n  width: 200px; /* 具体宽度 */\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #000000;\r\n}\r\n  \r\n  .notebook-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    background-color: #fff;\r\n  }\r\n  \r\n  .search-container input {\r\n    border: none;\r\n    outline: none;\r\n    flex-grow: 1;\r\n    padding-left: 25px; /* 为左侧图标留出空间 */\r\n    padding-right: 2px; /* 为右侧图标留出空间 */\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .clear-icon {\r\n    position: absolute;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  .notebook-list {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .note-item {\r\n    padding: 30px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .note-item.selected {\r\n    background-color: #a0e0a0;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n    /* 右侧笔记编辑区样式 */\r\n    .editor-section {\r\n    flex-grow: 1; /* 确保右侧编辑区占据剩余空间 */\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .editor-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n\r\n \r\n  \r\n  .editor-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 10px;\r\n  }\r\n  \r\n  .title-input {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .icon-button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .editor-body {\r\n    flex-grow: 1; /* 让编辑器主体部分占据剩余空间 */\r\n    overflow-y: auto; /* 防止内容过多时溢出 */\r\n  }\r\n  \r\n  .editor-toolbar {\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .quill-editor {\r\n    height: 400px;\r\n  }\r\n  \r\n  .editor-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .save-button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .save-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n\r\n  .tag-modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.tag-modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  max-width: 500px;\r\n  width: 90%;\r\n}\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}