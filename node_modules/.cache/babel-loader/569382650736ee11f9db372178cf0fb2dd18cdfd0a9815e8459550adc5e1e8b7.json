{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\r\n  export default {\r\n  data() {\r\n    return {\r\n      notes: [\"笔记1\", \"笔记2\", \"笔记3\", \"笔记4\", \"笔记5\", \"笔记6\", \"笔记7\", \"笔记8\"],\r\n      selectedNote: null,\r\n      hasMoreNotes: false, // 设置翻页功能的状态\r\n      searchQuery: '' ,// 添加 searchQuery 属性\r\n      notebookSummary: '',\r\n      notebookName: '',\r\n    };\r\n  },\r\n  computed: {\r\n    notebookId() {\r\n      return this.$route.params.id;\r\n    }\r\n  },\r\n  methods: {\r\n    selectNote(note) {\r\n    this.selectedNote = note;\r\n    this.$router.push({ name: 'NoteDetail', params: { notebookId: this.notebookId, noteId: note.id } });\r\n  },\r\n    prevPage() {\r\n      // 实现上一页功能\r\n    },\r\n    nextPage() {\r\n      // 实现下一页功能\r\n    },\r\n    clearSearch() {\r\n    this.searchQuery = ''; // 将 searchQuery 设置为空字符串\r\n    },\r\n    searchNotes() {\r\n      // 实现搜索功能\r\n    },\r\n    goToStart() {\r\n    this.$router.push({ name: 'Start' });\r\n    },\r\n    goToCommunity() {\r\n    this.$router.push({ name: 'Community' });\r\n    },\r\n    backToStart(){\r\n      this.$router.push({ name: 'Start' }); \r\n    },\r\n    backToNotebook(){\r\n      this.$router.push({ name: 'Notebook' }); \r\n    },\r\n    async fetchNotebookDetails(notebookId) {\r\n      // const token = localStorage.getItem('token');\r\n      try {\r\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n          method: 'GET',\r\n          // headers: {\r\n          //   'Authorization': `Bearer ${token}`\r\n          // }\r\n        });\r\n\r\n        //从后端GET名字和简介\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.notebookSummary = data.summary;\r\n          this.notebookName = data.name;\r\n          return data.data;\r\n        }else if(data.code === 405) {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }else {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n        return null;\r\n      }   \r\n    } ,  \r\n    async mounted() {\r\n      await this.fetchNotebookDetails();\r\n    }\r\n  }\r\n};\r\n  */\n\n//测试代码\nimport CreateNoteModal from './CreateNoteModal.vue';\nexport default {\n  components: {\n    CreateNoteModal\n  },\n  data() {\n    return {\n      //测试数据\n      notes: [{\n        id: '1',\n        title: '笔记1',\n        content: '笔记1的内容'\n      }, {\n        id: '2',\n        title: '笔记2',\n        content: '笔记2的内容'\n      }, {\n        id: '3',\n        title: '笔记3',\n        content: '笔记3的内容'\n      }, {\n        id: '4',\n        title: '笔记4',\n        content: '笔记4的内容'\n      }, {\n        id: '5',\n        title: '笔记5',\n        content: '笔记5的内容'\n      }, {\n        id: '6',\n        title: '笔记6',\n        content: '笔记6的内容'\n      }],\n      selectedNote: null,\n      hasMoreNotes: false,\n      // 设置翻页功能的状态\n      searchQuery: '',\n      // 添加 searchQuery 属性\n      notebookSummary: '这里是简介',\n      notebookName: '这里是笔记本名',\n      isCreateNoteModalVisible: false\n    };\n  },\n  computed: {\n    notebookId() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    selectNote(note) {\n      this.selectedNote = note;\n      this.$router.push({\n        name: 'NoteDetail',\n        params: {\n          notebookId: this.notebookId,\n          noteId: note.id\n        }\n      });\n    },\n    prevPage() {\n      // 实现上一页功能\n    },\n    nextPage() {\n      // 实现下一页功能\n    },\n    showCreateNoteModal() {\n      this.isCreateNoteModalVisible = true;\n    },\n    hideCreateNoteModal() {\n      this.isCreateNoteModalVisible = false;\n    },\n    clearSearch() {\n      this.searchQuery = ''; // 将 searchQuery 设置为空字符串\n    },\n    searchNotes() {\n      // 实现搜索功能\n    },\n    goToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    goToCommunity() {\n      this.$router.push({\n        name: 'Community'\n      });\n    },\n    backToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    backToNotebook() {\n      this.$router.push({\n        name: 'Notebook'\n      });\n    },\n    async fetchNotebookDetails(notebookId) {\n      // const token = localStorage.getItem('token');\n      try {\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\n          method: 'GET'\n          // headers: {\n          //   'Authorization': `Bearer ${token}`\n          // }\n        });\n\n        //从后端GET名字和简介\n        const data = await response.json();\n        if (data.code === 200) {\n          this.notebookSummary = data.summary;\n          this.notebookName = data.name;\n          return data.data;\n        } else if (data.code === 405) {\n          alert(`获取笔记本详细信息失败: ${data.message}`);\n          return null;\n        } else {\n          alert(`获取笔记本详细信息失败: ${data.message}`);\n          return null;\n        }\n      } catch (error) {\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\n        return null;\n      }\n    },\n    async mounted() {\n      await this.fetchNotebookDetails();\n    }\n  }\n};","map":{"version":3,"names":["CreateNoteModal","components","data","notes","id","title","content","selectedNote","hasMoreNotes","searchQuery","notebookSummary","notebookName","isCreateNoteModalVisible","computed","notebookId","$route","params","methods","selectNote","note","$router","push","name","noteId","prevPage","nextPage","showCreateNoteModal","hideCreateNoteModal","clearSearch","searchNotes","goToStart","goToCommunity","backToStart","backToNotebook","fetchNotebookDetails","response","fetch","method","json","code","summary","alert","message","error","console","mounted"],"sources":["D:\\VUEitem\\front\\src\\components\\NotebookDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 左侧侧边栏 -->\r\n    <div class=\"sidebar\">\r\n      <div class=\"sidebar-item\" id=\"username\">{{ username }}</div>\r\n      <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n      <div class=\"sidebar-item notebook-button\">笔记本</div>\r\n      <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n      <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div>\r\n    </div>\r\n    \r\n    <!-- 中间笔记本内容区 -->\r\n    <div class=\"middle-section\">\r\n      <div class=\"notebook-header\">\r\n        <h2>{{ notebookName }}</h2>\r\n        <div class=\"note-count-container\">\r\n          <p class=\"note-count\">{{ notes.length }}条笔记</p>\r\n          <!-- 加号创建新笔记 -->\r\n          <i class=\"fas fa-plus add-note\" @click=\"showCreateNoteModal\"></i>  \r\n        </div>\r\n\r\n        <div class=\"search-container\">\r\n          <!-- 搜索符号 -->\r\n          <i class=\"fas fa-search search-icon\" @click=\"searchNotes\"></i>\r\n          <input type=\"text\" v-model=\"searchQuery\" />\r\n          <!-- 叉号 -->\r\n          <i class=\"fas fa-times clear-icon\" @click=\"clearSearch\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"action-button\" @click=\"backToStart\">返回首页</button>\r\n      <button class=\"action-button\" @click=\"backToNotebook\">目录</button>\r\n      <div class=\"notebook-list\">\r\n        <div v-for=\"(note, index) in notes\" :key=\"index\" class=\"note-item\" :class=\"{ selected: selectedNote && selectedNote.id === note.id }\" @click=\"selectNote(note)\">\r\n          {{ note.title }}\r\n        </div>\r\n        <!-- 若有更多笔记，添加翻页功能 -->\r\n        <div v-if=\"hasMoreNotes\" class=\"pagination\">\r\n          <button @click=\"prevPage\">上一页</button>\r\n          <button @click=\"nextPage\">下一页</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧笔记详情区 -->\r\n    <div class=\"right-section\">\r\n      <div class=\"note-summary\">\r\n        <h3>简介</h3>\r\n        <div class=\"summary-content\">{{ notebookSummary }}</div>\r\n      </div>\r\n\r\n      <div class=\"note-content\">\r\n        <div class=\"content-header\">\r\n          <h3>笔记内容</h3>\r\n          <button class=\"edit-button\" @click=\"editNote\">编辑</button>\r\n        </div>\r\n        <div class=\"content-area\">{{ noteContent }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 包含模态框组件 -->\r\n    <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n  </div>\r\n</template>\r\n\r\n  <script>\r\n  /*\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        notes: [\"笔记1\", \"笔记2\", \"笔记3\", \"笔记4\", \"笔记5\", \"笔记6\", \"笔记7\", \"笔记8\"],\r\n        selectedNote: null,\r\n        hasMoreNotes: false, // 设置翻页功能的状态\r\n        searchQuery: '' ,// 添加 searchQuery 属性\r\n        notebookSummary: '',\r\n        notebookName: '',\r\n      };\r\n    },\r\n    computed: {\r\n      notebookId() {\r\n        return this.$route.params.id;\r\n      }\r\n    },\r\n    methods: {\r\n      selectNote(note) {\r\n      this.selectedNote = note;\r\n      this.$router.push({ name: 'NoteDetail', params: { notebookId: this.notebookId, noteId: note.id } });\r\n    },\r\n      prevPage() {\r\n        // 实现上一页功能\r\n      },\r\n      nextPage() {\r\n        // 实现下一页功能\r\n      },\r\n      clearSearch() {\r\n      this.searchQuery = ''; // 将 searchQuery 设置为空字符串\r\n      },\r\n      searchNotes() {\r\n        // 实现搜索功能\r\n      },\r\n      goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n      },\r\n      goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n      },\r\n      backToStart(){\r\n        this.$router.push({ name: 'Start' }); \r\n      },\r\n      backToNotebook(){\r\n        this.$router.push({ name: 'Notebook' }); \r\n      },\r\n      async fetchNotebookDetails(notebookId) {\r\n        // const token = localStorage.getItem('token');\r\n        try {\r\n          const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n            method: 'GET',\r\n            // headers: {\r\n            //   'Authorization': `Bearer ${token}`\r\n            // }\r\n          });\r\n  \r\n          //从后端GET名字和简介\r\n          const data = await response.json();\r\n          if (data.code === 200) {\r\n            this.notebookSummary = data.summary;\r\n            this.notebookName = data.name;\r\n            return data.data;\r\n          }else if(data.code === 405) {\r\n            alert(`获取笔记本详细信息失败: ${data.message}`);\r\n            return null;\r\n          }else {\r\n            alert(`获取笔记本详细信息失败: ${data.message}`);\r\n            return null;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n          return null;\r\n        }   \r\n      } ,  \r\n      async mounted() {\r\n        await this.fetchNotebookDetails();\r\n      }\r\n    }\r\n  };\r\n\r\n  */\r\n\r\n  //测试代码\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n\r\n  export default {\r\n    components: {\r\n        CreateNoteModal,\r\n    },\r\n    data() {\r\n      return {\r\n        //测试数据\r\n        notes: [\r\n        { id: '1', title: '笔记1', content: '笔记1的内容'},\r\n        { id: '2', title: '笔记2', content: '笔记2的内容' },\r\n        { id: '3', title: '笔记3', content: '笔记3的内容'},\r\n        { id: '4', title: '笔记4', content: '笔记4的内容' },\r\n        { id: '5', title: '笔记5', content: '笔记5的内容'},\r\n        { id: '6', title: '笔记6', content: '笔记6的内容' },\r\n        ],\r\n        selectedNote: null,\r\n        hasMoreNotes: false, // 设置翻页功能的状态\r\n        searchQuery: '' ,// 添加 searchQuery 属性\r\n        notebookSummary: '这里是简介',\r\n        notebookName: '这里是笔记本名',\r\n        isCreateNoteModalVisible: false,\r\n      };\r\n    },\r\n    computed: {\r\n      notebookId() {\r\n        return this.$route.params.id;\r\n      }\r\n    },\r\n    methods: {\r\n      selectNote(note) {\r\n      this.selectedNote = note;\r\n      this.$router.push({ name: 'NoteDetail', params: { notebookId: this.notebookId, noteId: note.id } });\r\n    },\r\n      prevPage() {\r\n        // 实现上一页功能\r\n      },\r\n      nextPage() {\r\n        // 实现下一页功能\r\n      },\r\n      showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n      },\r\n      hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n      },\r\n      clearSearch() {\r\n      this.searchQuery = ''; // 将 searchQuery 设置为空字符串\r\n      },\r\n      searchNotes() {\r\n        // 实现搜索功能\r\n      },\r\n      goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n      },\r\n      goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n      },\r\n      backToStart(){\r\n        this.$router.push({ name: 'Start' }); \r\n      },\r\n      backToNotebook(){\r\n        this.$router.push({ name: 'Notebook' }); \r\n      },\r\n      async fetchNotebookDetails(notebookId) {\r\n        // const token = localStorage.getItem('token');\r\n        try {\r\n          const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n            method: 'GET',\r\n            // headers: {\r\n            //   'Authorization': `Bearer ${token}`\r\n            // }\r\n          });\r\n  \r\n          //从后端GET名字和简介\r\n          const data = await response.json();\r\n          if (data.code === 200) {\r\n            this.notebookSummary = data.summary;\r\n            this.notebookName = data.name;\r\n            return data.data;\r\n          }else if(data.code === 405) {\r\n            alert(`获取笔记本详细信息失败: ${data.message}`);\r\n            return null;\r\n          }else {\r\n            alert(`获取笔记本详细信息失败: ${data.message}`);\r\n            return null;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n          return null;\r\n        }   \r\n      } ,  \r\n      async mounted() {\r\n        await this.fetchNotebookDetails();\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n  }\r\n  \r\n  /* 左侧侧边栏样式 */\r\n  .sidebar {\r\n\r\n    width: 16.6666%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    border-right: 1px solid #000000;\r\n    background-color: #d3d3d3;\r\n    text-align: center;\r\n  }\r\n  \r\n  .sidebar-item {\r\n    height: 20%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .notebook-button {\r\n    background-color: #696969;\r\n    color: white;\r\n  }\r\n  .note-count-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.note-count {\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n.add-note {\r\n  cursor: pointer;\r\n  font-size: 1.2em;\r\n  color: #000000; /* 可根据需要修改颜色 */\r\n}\r\n\r\n  .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #b0b0b0;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .sidebar-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  /* 中间笔记本内容区样式 */\r\n  .middle-section {\r\n    width: 200px;\r\n    background-color: #f0f0f0;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-right: 1px solid #000000;\r\n  }\r\n  \r\n  .notebook-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n   \r\n  }\r\n\r\n  .search-container {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n}\r\n\r\n.search-container input {\r\n  border: none;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  padding-left: 25px; /* 为左侧图标留出空间 */\r\n  padding-right: 2px; /* 为右侧图标留出空间 */\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  left: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.clear-icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n  \r\n  .action-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  .notebook-list {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .note-item {\r\n    padding: 30px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .note-item.selected {\r\n    background-color: #a0e0a0;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  /* 右侧笔记详情区样式 */\r\n  .right-section {\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .note-summary{\r\n    margin-bottom: 20px;\r\n  }\r\n  .note-content {\r\n    bottom: 100%\r\n  }\r\n  \r\n  .summary-content{\r\n    border: 1px solid #d0d0d0;\r\n    padding: 10px;\r\n    height: 100px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  .content-area {\r\n    border: 1px solid #d0d0d0;\r\n    padding: 10px;\r\n    height: 420px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}