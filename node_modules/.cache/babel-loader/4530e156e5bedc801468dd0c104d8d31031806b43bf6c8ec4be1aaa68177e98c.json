{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@wangeditor/editor/dist/css/style.css';\nimport { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport CreateNoteModal from './CreateNoteModal.vue';\nexport default {\n  components: {\n    Editor,\n    Toolbar,\n    CreateNoteModal\n  },\n  props: {\n    id: Number,\n    noteName: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      username: '测试用户',\n      // 笔记相关数据\n      notes: [\"笔记1\", \"笔记2\", \"笔记3\", \"笔记4\", \"笔记5\", \"笔记6\", \"笔记7\", \"笔记8\"],\n      selectedNote: null,\n      hasMoreNotes: false,\n      searchQuery: '',\n      notebookSummary: '这里是简介',\n      notebookName: '这里是笔记本名',\n      isCreateNoteModalVisible: false,\n      noteTitle: this.$route.params.noteName || '',\n      // 设置默认值\n\n      // 编辑器相关数据\n      editorRef: shallowRef(null),\n      valueHtml: ref('<p>hello</p>'),\n      toolbarConfig: {\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"]\n      },\n      editorConfig: {\n        MENU_CONF: {}\n      }\n    };\n  },\n  methods: {\n    selectNote(note) {\n      this.selectedNote = note;\n    },\n    prevPage() {\n      // 实现上一页功能\n    },\n    nextPage() {\n      // 实现下一页功能\n    },\n    showCreateNoteModal() {\n      this.isCreateNoteModalVisible = true;\n    },\n    hideCreateNoteModal() {\n      this.isCreateNoteModalVisible = false;\n    },\n    clearSearch() {\n      this.searchQuery = '';\n    },\n    searchNotes() {\n      // 实现搜索功能\n    },\n    goToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    goToCommunity() {\n      this.$router.push({\n        name: 'Community'\n      });\n    },\n    backToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    backToNotebook() {\n      this.$router.push({\n        name: 'Notebook'\n      });\n    },\n    async fetchNotebookDetails(notebookId) {\n      try {\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.notebookSummary = data.summary;\n          this.notebookName = data.name;\n          return data.data;\n        } else {\n          alert(`获取笔记本详细信息失败: ${data.message}`);\n          return null;\n        }\n      } catch (error) {\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\n        return null;\n      }\n    },\n    async mounted() {\n      await this.fetchNotebookDetails();\n    },\n    handleCreated(editor) {\n      console.log('created', editor);\n      this.editorRef = editor;\n    },\n    handleChange(editor) {\n      console.log('change:', editor.getHtml());\n    },\n    handleDestroyed(editor) {\n      console.log('destroyed', editor);\n    },\n    handleFocus(editor) {\n      console.log('focus', editor);\n    },\n    handleBlur(editor) {\n      console.log('blur', editor);\n    },\n    customAlert(info, type) {\n      alert(`【自定义提示】${type} - ${info}`);\n    },\n    customPaste(editor, event, callback) {\n      console.log('ClipboardEvent 粘贴事件对象', event);\n      editor.insertText('');\n      callback(true);\n    },\n    insertText() {\n      if (this.editorRef) {\n        this.editorRef.insertText('hello world');\n      }\n    },\n    printHtml() {\n      if (this.editorRef) {\n        console.log(this.editorRef.getHtml());\n      }\n    },\n    disable() {\n      if (this.editorRef) {\n        this.editorRef.disable();\n      }\n    },\n    //添加笔记，POST请求\n    async saveNote() {\n      const notebookId = this.$route.params.notebookId; // 获取笔记本ID\n      const title = this.noteTitle; // 笔记标题\n      const content = this.valueHtml; // 笔记内容\n      const tags = []; // 假设标签可以从某个地方获取\n\n      const payload = {\n        notebookId,\n        title,\n        content,\n        tags\n      };\n      try {\n        const response = await fetch('/api/notes/createNotes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await response.json();\n        switch (data.code) {\n          case 200:\n            alert('笔记保存成功');\n            this.notes.push({\n              title,\n              content\n            }); // 添加新笔记到 notes 数组\n            this.$router.push({\n              name: 'Notebook',\n              params: {\n                id: notebookId\n              }\n            });\n            break;\n          case 501:\n            alert('token 验证失败');\n            break;\n          case 405:\n            alert('不合法的请求');\n            break;\n          case 406:\n            alert('笔记本不存在: 查询路径不存在');\n            break;\n          default:\n            alert(`保存笔记失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error saving note:', error);\n        alert('保存笔记时出现错误');\n      }\n    },\n    tagNote() {\n      // 实现标签功能\n    },\n    favoriteNote() {\n      // 实现收藏功能\n    },\n    privateNote() {\n      // 实现私密功能\n    },\n    closeEditor() {\n      this.$router.push({\n        name: 'Start'\n      });\n    }\n  },\n  async mounted() {\n    await this.fetchNotebookDetails();\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","ref","shallowRef","onMounted","Editor","Toolbar","CreateNoteModal","components","props","id","Number","noteName","type","String","default","data","username","notes","selectedNote","hasMoreNotes","searchQuery","notebookSummary","notebookName","isCreateNoteModalVisible","noteTitle","$route","params","editorRef","valueHtml","toolbarConfig","excludeKeys","editorConfig","MENU_CONF","methods","selectNote","note","prevPage","nextPage","showCreateNoteModal","hideCreateNoteModal","clearSearch","searchNotes","goToStart","$router","push","name","goToCommunity","backToStart","backToNotebook","fetchNotebookDetails","notebookId","response","fetch","method","json","code","summary","alert","message","error","console","mounted","handleCreated","editor","log","handleChange","getHtml","handleDestroyed","handleFocus","handleBlur","customAlert","info","customPaste","event","callback","insertText","printHtml","disable","saveNote","title","content","tags","payload","headers","body","JSON","stringify","tagNote","favoriteNote","privateNote","closeEditor"],"sources":["D:\\VUEitem\\front\\src\\components\\NoteCreate.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- 左侧侧边栏 -->\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-username\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item notebook-button\">\r\n        <div class=\"icon-placeholder\"><img src=\"/vue图片/图片2.png\" alt=\"开始图标\" class=\"icon-image\"></div>\r\n        <span>笔记本</span>\r\n      </div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n        <!-- <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div> -->\r\n      </div>\r\n      \r\n      <!-- 中间笔记本内容区 -->\r\n      <div class=\"middle-section\">\r\n        <div class=\"notebook-header\">\r\n          <h2>{{ notebookName }}</h2>\r\n          <div class=\"note-count-container\">\r\n            <p class=\"note-count\">{{notes.length}}条笔记</p>\r\n            <i class=\"fas fa-plus add-note\" @click=\"showCreateNoteModal\"></i>\r\n          </div>\r\n  \r\n          <div class=\"search-container\">\r\n            <i class=\"fas fa-search search-icon\" @click=\"searchNotes\"></i>\r\n            <input type=\"text\" v-model=\"searchQuery\"/>\r\n            <i class=\"fas fa-times clear-icon\" @click=\"clearSearch\"></i>\r\n          </div>\r\n        </div>\r\n        \r\n        <button class=\"action-button\" @click=\"backToStart\">返回首页</button>\r\n        <button class=\"action-button\" @click=\"backToNotebook\">目录</button>\r\n        <div class=\"notebook-list\">\r\n          <div v-for=\"(note, index) in notes\" :key=\"index\" class=\"note-item\" :class=\"{ selected: selectedNote === note }\" @click=\"selectNote(note)\">\r\n            {{ note }}\r\n          </div>\r\n          <!-- 若有更多笔记，添加翻页功能 -->\r\n          <div v-if=\"hasMoreNotes\" class=\"pagination\">\r\n            <button @click=\"prevPage\">上一页</button>\r\n            <button @click=\"nextPage\">下一页</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 右侧笔记编辑区 -->\r\n      <div class=\"editor-section\">\r\n        <div class=\"editor-container\">\r\n          <div class=\"editor-header\">\r\n            <input type=\"text\" v-model=\"noteTitle\" placeholder=\"编辑标题\" class=\"title-input\"/>\r\n            <button class=\"icon-button\" @click=\"tagNote\"><i class=\"fas fa-tags\"></i></button>\r\n            <button class=\"icon-button\" @click=\"favoriteNote\"><i class=\"fas fa-star\"></i></button>\r\n            <button class=\"icon-button\" @click=\"privateNote\"><i class=\"fas fa-lock\"></i></button>\r\n            <button class=\"icon-button\" @click=\"closeEditor\"><i class=\"fas fa-times\"></i></button>\r\n          </div>\r\n          <div class=\"editor-body\">\r\n            <div class=\"editor-toolbar\">\r\n              <Toolbar\r\n                :editor=\"editorRef\"\r\n                :defaultConfig=\"toolbarConfig\"\r\n                :mode=\"mode\"\r\n              />\r\n            </div>\r\n            <Editor\r\n              :defaultConfig=\"editorConfig\"\r\n              :mode=\"mode\"\r\n              v-model=\"valueHtml\"\r\n              class=\"quill-editor\"\r\n              @onCreated=\"handleCreated\"\r\n              @onChange=\"handleChange\"\r\n              @onDestroyed=\"handleDestroyed\"\r\n              @onFocus=\"handleFocus\"\r\n              @onBlur=\"handleBlur\"\r\n              @customAlert=\"customAlert\"\r\n              @customPaste=\"customPaste\"\r\n            />\r\n          </div>\r\n          <div class=\"editor-footer\">\r\n            <button @click=\"saveNote\" class=\"save-button\">保存</button>\r\n            <!-- <button @click=\"insertText\">插入文本</button>\r\n            <button @click=\"printHtml\">打印 HTML</button>\r\n            <button @click=\"disable\">禁用</button> -->\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 包含模态框组件 -->\r\n      <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import '@wangeditor/editor/dist/css/style.css';\r\n  import { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\r\n  import { Editor, Toolbar } from '@wangeditor/editor-for-vue';\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n  \r\n  export default {\r\n  components: { Editor, Toolbar, CreateNoteModal },\r\n  props: {\r\n    id: Number,\r\n    noteName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      username: '测试用户',\r\n      // 笔记相关数据\r\n      notes: [\"笔记1\", \"笔记2\", \"笔记3\", \"笔记4\", \"笔记5\", \"笔记6\", \"笔记7\", \"笔记8\"],\r\n      selectedNote: null,\r\n      hasMoreNotes: false,\r\n      searchQuery: '',\r\n      notebookSummary: '这里是简介',\r\n      notebookName: '这里是笔记本名',\r\n      isCreateNoteModalVisible: false,\r\n      noteTitle: this.$route.params.noteName || '', // 设置默认值\r\n      \r\n      // 编辑器相关数据\r\n      editorRef: shallowRef(null),\r\n      valueHtml: ref('<p>hello</p>'),\r\n      toolbarConfig: {\r\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"],\r\n      },\r\n      editorConfig: { MENU_CONF: {} },\r\n    };\r\n  },\r\n  methods: {\r\n    selectNote(note) {\r\n      this.selectedNote = note;\r\n    },\r\n    prevPage() {\r\n      // 实现上一页功能\r\n    },\r\n    nextPage() {\r\n      // 实现下一页功能\r\n    },\r\n    showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n    },\r\n    hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n    },\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n    },\r\n    searchNotes() {\r\n      // 实现搜索功能\r\n    },\r\n    goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n    },\r\n    backToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    backToNotebook() {\r\n      this.$router.push({ name: 'Notebook' });\r\n    },\r\n    async fetchNotebookDetails(notebookId) {\r\n      try {\r\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n          method: 'GET',\r\n        });\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.notebookSummary = data.summary;\r\n          this.notebookName = data.name;\r\n          return data.data;\r\n        } else {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchNotebookDetails();\r\n    },\r\n    handleCreated(editor) {\r\n      console.log('created', editor);\r\n      this.editorRef = editor;\r\n    },\r\n    handleChange(editor) {\r\n      console.log('change:', editor.getHtml());\r\n    },\r\n    handleDestroyed(editor) {\r\n      console.log('destroyed', editor);\r\n    },\r\n    handleFocus(editor) {\r\n      console.log('focus', editor);\r\n    },\r\n    handleBlur(editor) {\r\n      console.log('blur', editor);\r\n    },\r\n    customAlert(info, type) {\r\n      alert(`【自定义提示】${type} - ${info}`);\r\n    },\r\n    customPaste(editor, event, callback) {\r\n      console.log('ClipboardEvent 粘贴事件对象', event);\r\n      editor.insertText('');\r\n      callback(true);\r\n    },\r\n    insertText() {\r\n      if (this.editorRef) {\r\n        this.editorRef.insertText('hello world');\r\n      }\r\n    },\r\n    printHtml() {\r\n      if (this.editorRef) {\r\n        console.log(this.editorRef.getHtml());\r\n      }\r\n    },\r\n    disable() {\r\n      if (this.editorRef) {\r\n        this.editorRef.disable();\r\n      }\r\n    },\r\n\r\n    //添加笔记，POST请求\r\n    async saveNote() {\r\n  const notebookId = this.$route.params.notebookId; // 获取笔记本ID\r\n  const title = this.noteTitle; // 笔记标题\r\n  const content = this.valueHtml; // 笔记内容\r\n  const tags = []; // 假设标签可以从某个地方获取\r\n\r\n  const payload = {\r\n    notebookId,\r\n    title,\r\n    content,\r\n    tags\r\n  };\r\n\r\n  try {\r\n    const response = await fetch('/api/notes/createNotes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    switch (data.code) {\r\n      case 200:\r\n        alert('笔记保存成功');\r\n        this.notes.push({ title, content }); // 添加新笔记到 notes 数组\r\n        this.$router.push({ name: 'Notebook', params: { id: notebookId } });\r\n        break;\r\n      case 501:\r\n        alert('token 验证失败');\r\n        break;\r\n      case 405:\r\n        alert('不合法的请求');\r\n        break;\r\n      case 406:\r\n        alert('笔记本不存在: 查询路径不存在');\r\n        break;\r\n      default:\r\n        alert(`保存笔记失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error saving note:', error);\r\n    alert('保存笔记时出现错误');\r\n  }\r\n},\r\n\r\n    tagNote() {\r\n      // 实现标签功能\r\n    },\r\n    favoriteNote() {\r\n      // 实现收藏功能\r\n    },\r\n    privateNote() {\r\n      // 实现私密功能\r\n    },\r\n    closeEditor() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.fetchNotebookDetails();\r\n  }\r\n};\r\n  </script>\r\n  \r\n<style scoped>\r\n\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* 左侧侧边栏样式 */\r\n  .sidebar {\r\n    width: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    border-right: 1px solid #e0e0e0;\r\n    background-color: #ffffff;\r\n    text-align: center;\r\n    padding-top: 20px;\r\n    box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .sidebar-item {\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 0;\r\n    cursor: pointer;\r\n    color: #333;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .sidebar-username {\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 0;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .sidebar-item:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n  \r\n  .notebook-button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border-radius: 20px;\r\n    padding: 10px 20px;\r\n    margin: 10px 20px;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .notebook-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n\r\n  \r\n  .note-count-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .note-count {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  \r\n  .add-note {\r\n    cursor: pointer;\r\n    font-size: 1.2em;\r\n    color: #000000; /* 可根据需要修改颜色 */\r\n  }\r\n  \r\n  .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #b0b0b0;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .icon-placeholder {\r\n    width: 60px; /* 设置圆形宽度 */\r\n    height: 60px; /* 设置圆形高度 */\r\n    background-color: #87d37c; /* 设置圆形背景颜色 */\r\n    border-radius: 50%; /* 使元素为圆形 */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px; /* 圆形与文字之间的间距 */\r\n  }\r\n\r\n  .icon-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover; /* 确保图片填满圆形且不变形 */\r\n  }\r\n\r\n  \r\n  .sidebar-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  /* 中间笔记本内容区样式 */\r\n .middle-section {\r\n    width: 200px; /* 具体宽度 */\r\n    background-color: #f0f0f0;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-right: 1px solid #000000;\r\n  }\r\n    \r\n  .notebook-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    background-color: #fff;\r\n  }\r\n  \r\n  .search-container input {\r\n    border: none;\r\n    outline: none;\r\n    flex-grow: 1;\r\n    padding-left: 25px; /* 为左侧图标留出空间 */\r\n    padding-right: 2px; /* 为右侧图标留出空间 */\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .clear-icon {\r\n    position: absolute;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  .notebook-list {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .note-item {\r\n    padding: 30px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .note-item.selected {\r\n    background-color: #a0e0a0;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  /* 右侧笔记编辑区样式 */\r\n  .editor-section {\r\n    flex-grow: 1; /* 确保右侧编辑区占据剩余空间 */\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .editor-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n\r\n \r\n  \r\n  .editor-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 10px;\r\n  }\r\n  \r\n  .title-input {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .icon-button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .editor-body {\r\n    flex-grow: 1; /* 让编辑器主体部分占据剩余空间 */\r\n    overflow-y: auto; /* 防止内容过多时溢出 */\r\n  }\r\n  \r\n  .editor-toolbar {\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .quill-editor {\r\n    height: 400px;\r\n  }\r\n  \r\n  .editor-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .save-button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .save-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA4FE,OAAO,uCAAuC;AAC9C,SAASA,eAAe,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAQ,QAAS,KAAK;AACjE,SAASC,MAAM,EAAEC,OAAM,QAAS,4BAA4B;AAC5D,OAAOC,eAAc,MAAO,uBAAuB;AAEnD,eAAe;EACfC,UAAU,EAAE;IAAEH,MAAM;IAAEC,OAAO;IAAEC;EAAgB,CAAC;EAChDE,KAAK,EAAE;IACLC,EAAE,EAAEC,MAAM;IACVC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,MAAM;MAChB;MACAC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC/DC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,SAAS;MACvBC,wBAAwB,EAAE,KAAK;MAC/BC,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACf,QAAO,IAAK,EAAE;MAAE;;MAE9C;MACAgB,SAAS,EAAEzB,UAAU,CAAC,IAAI,CAAC;MAC3B0B,SAAS,EAAE3B,GAAG,CAAC,cAAc,CAAC;MAC9B4B,aAAa,EAAE;QACbC,WAAW,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,YAAY;MAC1D,CAAC;MACDC,YAAY,EAAE;QAAEC,SAAS,EAAE,CAAC;MAAE;IAChC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACjB,YAAW,GAAIiB,IAAI;IAC1B,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACf,wBAAuB,GAAI,IAAI;IACtC,CAAC;IACDgB,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAChB,wBAAuB,GAAI,KAAK;IACvC,CAAC;IACDiB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACpB,WAAU,GAAI,EAAE;IACvB,CAAC;IACDqB,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACtC,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IAC1C,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACtC,CAAC;IACDG,cAAcA,CAAA,EAAG;MACf,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC,CAAC;IACzC,CAAC;IACD,MAAMI,oBAAoBA,CAACC,UAAU,EAAE;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kBAAkBF,UAAU,EAAE,EAAE;UAC3DG,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAMtC,IAAG,GAAI,MAAMoC,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAIvC,IAAI,CAACwC,IAAG,KAAM,GAAG,EAAE;UACrB,IAAI,CAAClC,eAAc,GAAIN,IAAI,CAACyC,OAAO;UACnC,IAAI,CAAClC,YAAW,GAAIP,IAAI,CAAC8B,IAAI;UAC7B,OAAO9B,IAAI,CAACA,IAAI;QAClB,OAAO;UACL0C,KAAK,CAAC,gBAAgB1C,IAAI,CAAC2C,OAAO,EAAE,CAAC;UACrC,OAAO,IAAI;QACb;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0CT,UAAU,GAAG,EAAES,KAAK,CAAC;QAC7E,OAAO,IAAI;MACb;IACF,CAAC;IACD,MAAME,OAAOA,CAAA,EAAG;MACd,MAAM,IAAI,CAACZ,oBAAoB,CAAC,CAAC;IACnC,CAAC;IACDa,aAAaA,CAACC,MAAM,EAAE;MACpBH,OAAO,CAACI,GAAG,CAAC,SAAS,EAAED,MAAM,CAAC;MAC9B,IAAI,CAACpC,SAAQ,GAAIoC,MAAM;IACzB,CAAC;IACDE,YAAYA,CAACF,MAAM,EAAE;MACnBH,OAAO,CAACI,GAAG,CAAC,SAAS,EAAED,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC;IAC1C,CAAC;IACDC,eAAeA,CAACJ,MAAM,EAAE;MACtBH,OAAO,CAACI,GAAG,CAAC,WAAW,EAAED,MAAM,CAAC;IAClC,CAAC;IACDK,WAAWA,CAACL,MAAM,EAAE;MAClBH,OAAO,CAACI,GAAG,CAAC,OAAO,EAAED,MAAM,CAAC;IAC9B,CAAC;IACDM,UAAUA,CAACN,MAAM,EAAE;MACjBH,OAAO,CAACI,GAAG,CAAC,MAAM,EAAED,MAAM,CAAC;IAC7B,CAAC;IACDO,WAAWA,CAACC,IAAI,EAAE3D,IAAI,EAAE;MACtB6C,KAAK,CAAC,UAAU7C,IAAI,MAAM2D,IAAI,EAAE,CAAC;IACnC,CAAC;IACDC,WAAWA,CAACT,MAAM,EAAEU,KAAK,EAAEC,QAAQ,EAAE;MACnCd,OAAO,CAACI,GAAG,CAAC,uBAAuB,EAAES,KAAK,CAAC;MAC3CV,MAAM,CAACY,UAAU,CAAC,EAAE,CAAC;MACrBD,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAAChD,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACgD,UAAU,CAAC,aAAa,CAAC;MAC1C;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACjD,SAAS,EAAE;QAClBiC,OAAO,CAACI,GAAG,CAAC,IAAI,CAACrC,SAAS,CAACuC,OAAO,CAAC,CAAC,CAAC;MACvC;IACF,CAAC;IACDW,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAAClD,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACkD,OAAO,CAAC,CAAC;MAC1B;IACF,CAAC;IAED;IACA,MAAMC,QAAQA,CAAA,EAAG;MACnB,MAAM5B,UAAS,GAAI,IAAI,CAACzB,MAAM,CAACC,MAAM,CAACwB,UAAU,EAAE;MAClD,MAAM6B,KAAI,GAAI,IAAI,CAACvD,SAAS,EAAE;MAC9B,MAAMwD,OAAM,GAAI,IAAI,CAACpD,SAAS,EAAE;MAChC,MAAMqD,IAAG,GAAI,EAAE,EAAE;;MAEjB,MAAMC,OAAM,GAAI;QACdhC,UAAU;QACV6B,KAAK;QACLC,OAAO;QACPC;MACF,CAAC;MAED,IAAI;QACF,MAAM9B,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwB,EAAE;UACrDC,MAAM,EAAE,MAAM;UACd8B,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;QAC9B,CAAC,CAAC;QAEF,MAAMnE,IAAG,GAAI,MAAMoC,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,QAAQvC,IAAI,CAACwC,IAAI;UACf,KAAK,GAAG;YACNE,KAAK,CAAC,QAAQ,CAAC;YACf,IAAI,CAACxC,KAAK,CAAC2B,IAAI,CAAC;cAAEmC,KAAK;cAAEC;YAAQ,CAAC,CAAC,EAAE;YACrC,IAAI,CAACrC,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE,UAAU;cAAEnB,MAAM,EAAE;gBAAEjB,EAAE,EAAEyC;cAAW;YAAE,CAAC,CAAC;YACnE;UACF,KAAK,GAAG;YACNO,KAAK,CAAC,YAAY,CAAC;YACnB;UACF,KAAK,GAAG;YACNA,KAAK,CAAC,QAAQ,CAAC;YACf;UACF,KAAK,GAAG;YACNA,KAAK,CAAC,iBAAiB,CAAC;YACxB;UACF;YACEA,KAAK,CAAC,WAAW1C,IAAI,CAAC2C,OAAO,EAAE,CAAC;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CF,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC;IAEG8B,OAAOA,CAAA,EAAG;MACR;IAAA,CACD;IACDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IACDC,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC/C,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACtC;EACF,CAAC;EACD,MAAMgB,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACZ,oBAAoB,CAAC,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}