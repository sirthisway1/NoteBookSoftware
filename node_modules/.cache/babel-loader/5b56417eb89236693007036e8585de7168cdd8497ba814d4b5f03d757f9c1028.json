{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '测试用户',\n      note: null,\n      comments: [],\n      likeCount: 0,\n      isLiked: false,\n      newComment: ''\n    };\n  },\n  methods: {\n    goToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    goToNotebook() {\n      this.$router.push({\n        name: 'Notebook'\n      });\n    },\n    goToCommunity() {\n      this.$router.push({\n        name: 'Community'\n      });\n    },\n    goToTags() {\n      // 如果有标签管理页面，需要添加对应的路由\n      this.$router.push({\n        name: 'Tags'\n      });\n    },\n    async fetchNoteDetail() {\n      const noteId = this.$route.params.noteId;\n\n      // 模拟API延迟\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // 模拟从Community.vue中获取的笔记数据\n      const mockNotes = [{\n        noteId: \"123456\",\n        username: \"用户1\",\n        title: \"My Note 1\",\n        content: \"你好锕 Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 2,\n        isPrivate: false,\n        createdAt: \"2023-04-01T12:00:00Z\",\n        updatedAt: \"2023-04-01T12:00:00Z\"\n      }, {\n        noteId: \"654321\",\n        username: \"用户2\",\n        title: \"My Note 2\",\n        content: \"你好 content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here.\",\n        tags: [\"tag3\"],\n        type: 2,\n        isPrivate: false,\n        createdAt: \"2023-05-01T12:00:00Z\",\n        updatedAt: \"2023-05-01T12:00:00Z\"\n      }\n      // ... 其他笔记数据 ...\n      ];\n\n      // 查找对应noteId的笔记\n      const note = mockNotes.find(note => note.noteId === noteId);\n      if (note) {\n        this.note = note;\n      } else {\n        // 如果没有找到对应的笔记，设置一个默认值或显示错误信息\n        this.note = {\n          noteId: noteId,\n          username: \"未知用户\",\n          title: \"笔记未找到\",\n          content: \"抱歉，未找到对应的笔记内容。\",\n          createdAt: new Date().toISOString()\n        };\n      }\n      await this.fetchComments();\n      await this.fetchLikeCount();\n      await this.checkIfLiked();\n    },\n    async toggleLike() {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n      this.isLiked = !this.isLiked;\n      this.likeCount += this.isLiked ? 1 : -1;\n    },\n    async fetchLikeCount() {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n      this.likeCount = Math.floor(Math.random() * 100);\n    },\n    async checkIfLiked() {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n      this.isLiked = Math.random() < 0.5;\n    },\n    async fetchComments() {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n\n      // 模拟评论数据\n      this.comments = [{\n        commentId: 'comment1',\n        content: '这是一条测试评论1',\n        createdAt: \"2023-07-07T10:00:00Z\",\n        createdBy: {\n          username: 'User1'\n        }\n      }, {\n        commentId: 'comment2',\n        content: '这是一条测试评论2',\n        createdAt: \"2023-07-07T11:00:00Z\",\n        createdBy: {\n          username: 'User2'\n        }\n      }, {\n        commentId: 'comment3',\n        content: '这是一条测试评论3',\n        createdAt: \"2023-07-07T12:00:00Z\",\n        createdBy: {\n          username: 'User3'\n        }\n      }];\n    },\n    async postComment() {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n      const newCommentObj = {\n        commentId: 'comment' + (this.comments.length + 1),\n        content: this.newComment,\n        createdAt: new Date().toISOString(),\n        createdBy: {\n          username: this.username\n        }\n      };\n      this.comments.push(newCommentObj);\n      this.newComment = '';\n    },\n    async deleteComment(commentId) {\n      // 模拟API请求延迟\n      await new Promise(resolve => setTimeout(resolve, 300));\n      this.comments = this.comments.filter(comment => comment.commentId !== commentId);\n    },\n    canDeleteComment(comment) {\n      return this.note.username === this.username || comment.createdBy.username === this.username;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleString();\n    }\n  },\n  async mounted() {\n    await this.fetchNoteDetail();\n  }\n};","map":{"version":3,"names":["data","username","note","comments","likeCount","isLiked","newComment","methods","goToStart","$router","push","name","goToNotebook","goToCommunity","goToTags","fetchNoteDetail","noteId","$route","params","Promise","resolve","setTimeout","mockNotes","title","content","tags","type","isPrivate","createdAt","updatedAt","find","Date","toISOString","fetchComments","fetchLikeCount","checkIfLiked","toggleLike","Math","floor","random","commentId","createdBy","postComment","newCommentObj","length","deleteComment","filter","comment","canDeleteComment","formatDate","dateString","toLocaleString","mounted"],"sources":["D:\\VUEitem\\front\\src\\components\\CommunityDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-username\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item\" @click=\"goToNotebook\">笔记本</div>\r\n        <div class=\"sidebar-item community-button\" @click=\"goToCommunity\">\r\n          <div class=\"icon-placeholder\"><img src=\"/vue图片/图片3.png\" alt=\"开始图标\" class=\"icon-image\"></div>\r\n          <span>发现社区</span>\r\n        </div>\r\n        <!-- <div class=\"sidebar-item\" @click=\"goToTags\">标签管理</div> -->\r\n      </div>\r\n      <div class=\"main-content\">\r\n        <div class=\"note-detail\" v-if=\"note\">\r\n          <h1>{{ note.title }}</h1>\r\n          <div class=\"note-info\">\r\n            <span>作者: {{ note.username }}</span>\r\n            <span>创建时间: {{ formatDate(note.createdAt) }}</span>\r\n            <span>点赞数: {{ likeCount }}</span>\r\n            <button @click=\"toggleLike\" :class=\"{ 'liked': isLiked }\">\r\n            {{ isLiked ? '取消点赞' : '点赞' }}\r\n          </button>\r\n          </div>\r\n          <div class=\"note-content\">\r\n            {{ note.content }}\r\n          </div>\r\n            <!-- 评论部分 -->\r\n        <div class=\"comments-section\">\r\n          <h3>评论</h3>\r\n          <div class=\"add-comment\">\r\n            <textarea v-model=\"newComment\" placeholder=\"添加评论...\"></textarea>\r\n            <button @click=\"postComment\">发表评论</button>\r\n          </div>\r\n          <div class=\"comment-list\">\r\n            <div v-for=\"comment in comments\" :key=\"comment.commentId\" class=\"comment-item\">\r\n              <strong>{{ comment.createdBy.username }}:</strong>\r\n              <p>{{ comment.content }}</p>\r\n              <span>{{ formatDate(comment.createdAt) }}</span>\r\n              <button v-if=\"canDeleteComment(comment)\" @click=\"deleteComment(comment.commentId)\">删除</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div v-else>加载中...</div>\r\n\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '测试用户',\r\n        note: null,\r\n        comments: [],\r\n        likeCount: 0,\r\n      isLiked: false,\r\n      newComment: '',\r\n      };\r\n    },\r\n    methods: {\r\n      goToStart() {\r\n        this.$router.push({ name: 'Start' });\r\n      },\r\n      goToNotebook() {\r\n        this.$router.push({ name: 'Notebook' });\r\n      },\r\n      goToCommunity() {\r\n        this.$router.push({ name: 'Community' });\r\n      },\r\n      goToTags() {\r\n        // 如果有标签管理页面，需要添加对应的路由\r\n        this.$router.push({ name: 'Tags' });\r\n      },\r\n      async fetchNoteDetail() {\r\n        const noteId = this.$route.params.noteId;\r\n\r\n        // 模拟API延迟\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n        // 模拟从Community.vue中获取的笔记数据\r\n        const mockNotes = [\r\n            {\r\n            noteId: \"123456\",\r\n            username: \"用户1\",\r\n            title: \"My Note 1\",\r\n            content: \"你好锕 Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.\",\r\n            tags: [\"tag1\", \"tag2\"],\r\n            type: 2,\r\n            isPrivate: false,\r\n            createdAt: \"2023-04-01T12:00:00Z\",\r\n            updatedAt: \"2023-04-01T12:00:00Z\",\r\n            },\r\n            {\r\n            noteId: \"654321\",\r\n            username: \"用户2\",\r\n            title: \"My Note 2\",\r\n            content: \"你好 content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here.\",\r\n            tags: [\"tag3\"],\r\n            type: 2,\r\n            isPrivate: false,\r\n            createdAt: \"2023-05-01T12:00:00Z\",\r\n            updatedAt: \"2023-05-01T12:00:00Z\",\r\n            },\r\n            // ... 其他笔记数据 ...\r\n            \r\n        ];\r\n\r\n        // 查找对应noteId的笔记\r\n        const note = mockNotes.find(note => note.noteId === noteId);\r\n\r\n        if (note) {\r\n            this.note = note;\r\n        } else {\r\n            // 如果没有找到对应的笔记，设置一个默认值或显示错误信息\r\n            this.note = {\r\n            noteId: noteId,\r\n            username: \"未知用户\",\r\n            title: \"笔记未找到\",\r\n            content: \"抱歉，未找到对应的笔记内容。\",\r\n            createdAt: new Date().toISOString(),\r\n            };\r\n        }\r\n        await this.fetchComments();\r\n        await this.fetchLikeCount();\r\n        await this.checkIfLiked();\r\n    },\r\n\r\n    async toggleLike() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.isLiked = !this.isLiked;\r\n      this.likeCount += this.isLiked ? 1 : -1;\r\n    },\r\n\r\n    async fetchLikeCount() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.likeCount = Math.floor(Math.random() * 100);\r\n    },\r\n\r\n    async checkIfLiked() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.isLiked = Math.random() < 0.5;\r\n    },\r\n\r\n    async fetchComments() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      // 模拟评论数据\r\n      this.comments = [\r\n        { commentId: 'comment1', content: '这是一条测试评论1', createdAt: \"2023-07-07T10:00:00Z\", createdBy: { username: 'User1' } },\r\n        { commentId: 'comment2', content: '这是一条测试评论2', createdAt: \"2023-07-07T11:00:00Z\", createdBy: { username: 'User2' } },\r\n        { commentId: 'comment3', content: '这是一条测试评论3', createdAt: \"2023-07-07T12:00:00Z\", createdBy: { username: 'User3' } },\r\n      ];\r\n    },\r\n\r\n    async postComment() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      const newCommentObj = {\r\n        commentId: 'comment' + (this.comments.length + 1),\r\n        content: this.newComment,\r\n        createdAt: new Date().toISOString(),\r\n        createdBy: { username: this.username }\r\n      };\r\n\r\n      this.comments.push(newCommentObj);\r\n      this.newComment = '';\r\n    },\r\n\r\n    async deleteComment(commentId) {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.comments = this.comments.filter(comment => comment.commentId !== commentId);\r\n    },\r\n\r\n    canDeleteComment(comment) {\r\n      return this.note.username === this.username || comment.createdBy.username === this.username;\r\n    },\r\n\r\n      formatDate(dateString) {\r\n        return new Date(dateString).toLocaleString();\r\n      },\r\n\r\n    },\r\n    async mounted() {\r\n      await this.fetchNoteDetail();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.container {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.sidebar {\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-right: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.sidebar-item {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  cursor: pointer;\r\n  color: #333;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.sidebar-username {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n\r\n.community-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  margin: 10px 20px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.community-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.main-content {\r\n  flex-grow: 1;\r\n  padding: 30px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.note-detail {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.note-detail h1 {\r\n  font-size: 28px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.note-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.note-content {\r\n  line-height: 1.8;\r\n  white-space: pre-wrap;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 确保图片填满圆形且不变形 */\r\n}\r\n\r\n.like-button {\r\n  background-color: #f0f0f0;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.like-button:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.liked {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 30px;\r\n}\r\n\r\n.comments-section h3 {\r\n  font-size: 20px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment textarea {\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n\r\n.add-comment button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.add-comment button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.comment-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.comment-item {\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 15px 0;\r\n}\r\n\r\n.comment-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.comment-item strong {\r\n  color: #333;\r\n}\r\n\r\n.comment-item p {\r\n  margin: 10px 0;\r\n  color: #666;\r\n}\r\n\r\n.comment-item span {\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n.comment-item button {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.comment-item button:hover {\r\n  background-color: #d32f2f;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}