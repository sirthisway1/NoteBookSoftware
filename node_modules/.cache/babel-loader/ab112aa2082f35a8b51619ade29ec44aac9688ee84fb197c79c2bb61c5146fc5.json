{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    visible: Boolean,\n    tags: Array\n  },\n  data() {\n    return {\n      newTag: '',\n      localTags: []\n    };\n  },\n  watch: {\n    tags: {\n      immediate: true,\n      handler(newTags) {\n        console.log('Received tags:', newTags);\n        this.localTags = [...newTags];\n      }\n    }\n  },\n  methods: {\n    addTag() {\n      if (this.newTag.trim() && !this.localTags.includes(this.newTag.trim())) {\n        this.localTags.push(this.newTag.trim());\n        this.$emit('update-tags', this.localTags);\n        this.newTag = '';\n      }\n    },\n    removeTag(tag) {\n      this.localTags = this.localTags.filter(t => t !== tag);\n      this.$emit('update-tags', this.localTags);\n    },\n    close() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["props","visible","Boolean","tags","Array","data","newTag","localTags","watch","immediate","handler","newTags","console","log","methods","addTag","trim","includes","push","$emit","removeTag","tag","filter","t","close"],"sources":["C:\\Users\\Rome\\Desktop\\front\\src\\components\\TagModal.vue"],"sourcesContent":["<template>\r\n    <transition name=\"fade\">\r\n      <div v-if=\"visible\" class=\"tag-modal-overlay\">\r\n        <div class=\"modal-content\">\r\n          <h2>添加标签</h2>\r\n          <div class=\"input-group\">\r\n            <input v-model=\"newTag\" placeholder=\"输入新标签\" @keyup.enter=\"addTag\" />\r\n            <button @click=\"addTag\" class=\"add-btn\">添加</button>\r\n          </div>\r\n          <h3>当前标签:</h3>\r\n          <ul class=\"tag-list\">\r\n            <li v-for=\"tag in localTags\" :key=\"tag\">\r\n              {{ tag }}\r\n              <button @click=\"removeTag(tag)\" class=\"remove-btn\">x</button>\r\n            </li>\r\n          </ul>\r\n          <button @click=\"close\" class=\"close-btn\">关闭</button>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      visible: Boolean,\r\n      tags: Array,\r\n    },\r\n    data() {\r\n      return {\r\n        newTag: '',\r\n        localTags: [],\r\n      };\r\n    },\r\n    watch: {\r\n    tags: {\r\n        immediate: true,\r\n        handler(newTags) {\r\n        console.log('Received tags:', newTags);\r\n        this.localTags = [...newTags];\r\n        },\r\n    },\r\n    },\r\n    methods: {\r\n      addTag() {\r\n        if (this.newTag.trim() && !this.localTags.includes(this.newTag.trim())) {\r\n          this.localTags.push(this.newTag.trim());\r\n          this.$emit('update-tags', this.localTags);\r\n          this.newTag = '';\r\n        }\r\n      },\r\n      removeTag(tag) {\r\n        this.localTags = this.localTags.filter(t => t !== tag);\r\n        this.$emit('update-tags', this.localTags);\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.tag-modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #ffffff;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  max-width: 400px;\r\n  width: 100%;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\ninput {\r\n  flex-grow: 1;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.add-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nh3 {\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.tag-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.tag-list li {\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  padding: 0.3rem 0.6rem;\r\n  margin-bottom: 0.3rem;\r\n  border-radius: 3px;\r\n  display: inline-block;\r\n  margin-right: 0.3rem;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"mappings":";AAuBE,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC,OAAO;IAChBC,IAAI,EAAEC;EACR,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACPL,IAAI,EAAE;MACFM,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,OAAO,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC;QACtC,IAAI,CAACJ,SAAQ,GAAI,CAAC,GAAGI,OAAO,CAAC;MAC7B;IACJ;EACA,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACT,MAAM,CAACU,IAAI,CAAC,KAAK,CAAC,IAAI,CAACT,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACX,MAAM,CAACU,IAAI,CAAC,CAAC,CAAC,EAAE;QACtE,IAAI,CAACT,SAAS,CAACW,IAAI,CAAC,IAAI,CAACZ,MAAM,CAACU,IAAI,CAAC,CAAC,CAAC;QACvC,IAAI,CAACG,KAAK,CAAC,aAAa,EAAE,IAAI,CAACZ,SAAS,CAAC;QACzC,IAAI,CAACD,MAAK,GAAI,EAAE;MAClB;IACF,CAAC;IACDc,SAASA,CAACC,GAAG,EAAE;MACb,IAAI,CAACd,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACe,MAAM,CAACC,CAAA,IAAKA,CAAA,KAAMF,GAAG,CAAC;MACtD,IAAI,CAACF,KAAK,CAAC,aAAa,EAAE,IAAI,CAACZ,SAAS,CAAC;IAC3C,CAAC;IACDiB,KAAKA,CAAA,EAAG;MACN,IAAI,CAACL,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}