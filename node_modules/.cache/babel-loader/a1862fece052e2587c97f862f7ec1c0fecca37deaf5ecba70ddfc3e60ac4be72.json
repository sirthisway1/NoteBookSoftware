{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@wangeditor/editor/dist/css/style.css';\nimport { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport CreateNoteModal from './CreateNoteModal.vue';\nexport default {\n  components: {\n    Editor,\n    Toolbar,\n    CreateNoteModal\n  },\n  props: {\n    id: Number,\n    noteName: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      // 笔记相关数据\n      notes: [{\n        id: '1',\n        title: '笔记1',\n        content: '笔记1的内容'\n      }, {\n        id: '2',\n        title: '笔记2',\n        content: '笔记2的内容'\n      }, {\n        id: '3',\n        title: '笔记3',\n        content: '笔记3的内容'\n      }, {\n        id: '4',\n        title: '笔记4',\n        content: '笔记4的内容'\n      }, {\n        id: '5',\n        title: '笔记5',\n        content: '笔记5的内容'\n      }, {\n        id: '6',\n        title: '笔记6',\n        content: '笔记6的内容'\n      }],\n      selectedNote: null,\n      hasMoreNotes: false,\n      searchQuery: '',\n      notebookSummary: '这里是简介',\n      notebookName: '这里是笔记本名',\n      isCreateNoteModalVisible: false,\n      noteTitle: this.$route.params.noteName || '',\n      // 设置默认值\n\n      // 编辑器相关数据\n      editorRef: shallowRef(null),\n      valueHtml: ref('<p>hello</p>'),\n      toolbarConfig: {\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"]\n      },\n      editorConfig: {\n        MENU_CONF: {}\n      }\n    };\n  },\n  methods: {\n    selectNote(note) {\n      this.selectedNote = note;\n      this.$router.push({\n        name: 'NoteDetail',\n        params: {\n          notebookId: this.notebookId,\n          noteId: note.id\n        }\n      });\n    },\n    async fetchNoteDetails(noteId) {\n      try {\n        const response = await fetch(`/api/notes/${this.noteId}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.noteContent = data.data.content;\n        } else if (data.code === 404) {\n          alert('资源不存在');\n        } else if (data.code === 501) {\n          alert('Token 验证失败');\n        } else if (data.code === 405) {\n          alert('不合法的请求');\n        } else {\n          alert(`获取笔记详细信息失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error(`Error fetching note details for ID ${noteId}:`, error);\n      }\n    },\n    async mounted() {\n      const noteId = this.$route.params.noteId;\n      if (noteId) {\n        await this.fetchNoteDetails(noteId);\n      }\n    },\n    prevPage() {\n      // 实现上一页功能\n    },\n    nextPage() {\n      // 实现下一页功能\n    },\n    showCreateNoteModal() {\n      this.isCreateNoteModalVisible = true;\n    },\n    hideCreateNoteModal() {\n      this.isCreateNoteModalVisible = false;\n    },\n    clearSearch() {\n      this.searchQuery = '';\n    },\n    searchNotes() {\n      // 实现搜索功能\n    },\n    goToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    goToCommunity() {\n      this.$router.push({\n        name: 'Community'\n      });\n    },\n    backToStart() {\n      this.$router.push({\n        name: 'Start'\n      });\n    },\n    backToNotebook() {\n      this.$router.push({\n        name: 'Notebook'\n      });\n    },\n    async fetchNotebookDetails(notebookId) {\n      try {\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\n          method: 'GET'\n        });\n        const data = await response.json();\n        if (data.code === 200) {\n          this.notebookSummary = data.summary;\n          this.notebookName = data.name;\n          return data.data;\n        } else {\n          alert(`获取笔记本详细信息失败: ${data.message}`);\n          return null;\n        }\n      } catch (error) {\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\n        return null;\n      }\n    },\n    async mounted() {\n      await this.fetchNotebookDetails();\n    },\n    handleCreated(editor) {\n      console.log('created', editor);\n      this.editorRef = editor;\n    },\n    handleChange(editor) {\n      console.log('change:', editor.getHtml());\n    },\n    handleDestroyed(editor) {\n      console.log('destroyed', editor);\n    },\n    handleFocus(editor) {\n      console.log('focus', editor);\n    },\n    handleBlur(editor) {\n      console.log('blur', editor);\n    },\n    customAlert(info, type) {\n      alert(`【自定义提示】${type} - ${info}`);\n    },\n    customPaste(editor, event, callback) {\n      console.log('ClipboardEvent 粘贴事件对象', event);\n      editor.insertText('');\n      callback(true);\n    },\n    insertText() {\n      if (this.editorRef) {\n        this.editorRef.insertText('hello world');\n      }\n    },\n    printHtml() {\n      if (this.editorRef) {\n        console.log(this.editorRef.getHtml());\n      }\n    },\n    disable() {\n      if (this.editorRef) {\n        this.editorRef.disable();\n      }\n    },\n    //添加笔记，POST请求\n    // 更新笔记，PUT请求\n    async saveNote() {\n      if (!this.selectedNote) {\n        alert('没有选中任何笔记');\n        return;\n      }\n      const noteId = this.selectedNote.id; // 从选中的笔记中获取ID\n      const title = this.noteTitle; // 从输入框获取标题\n      const content = this.valueHtml; // 从编辑器获取内容\n      const tags = this.selectedNote.tags || []; // 假设标签可以从编辑界面某处获取\n\n      const payload = {\n        title,\n        content,\n        tags\n      };\n      try {\n        const response = await fetch(`/api/notes/${noteId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await response.json();\n        switch (data.code) {\n          case 200:\n            alert('笔记更新成功');\n            this.$router.push({\n              name: 'NoteDetail',\n              params: {\n                id: noteId\n              }\n            }); // 假设有一个笔记详情路由\n            break;\n          case 501:\n            alert('token 验证失败');\n            break;\n          case 405:\n            alert('不合法的请求');\n            break;\n          case 404:\n            alert('笔记不存在');\n            break;\n          default:\n            alert(`更新笔记失败: ${data.message}`);\n        }\n      } catch (error) {\n        console.error('Error updating note:', error);\n        alert('更新笔记时出现错误');\n      }\n    },\n    tagNote() {\n      // 实现标签功能\n    },\n    favoriteNote() {\n      // 实现收藏功能\n    },\n    privateNote() {\n      // 实现私密功能\n    },\n    closeEditor() {\n      this.$router.push({\n        name: 'NoteDetail'\n      });\n    }\n  },\n  async mounted() {\n    await this.fetchNotebookDetails();\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","ref","shallowRef","onMounted","Editor","Toolbar","CreateNoteModal","components","props","id","Number","noteName","type","String","default","data","notes","title","content","selectedNote","hasMoreNotes","searchQuery","notebookSummary","notebookName","isCreateNoteModalVisible","noteTitle","$route","params","editorRef","valueHtml","toolbarConfig","excludeKeys","editorConfig","MENU_CONF","methods","selectNote","note","$router","push","name","notebookId","noteId","fetchNoteDetails","response","fetch","method","json","code","noteContent","alert","message","error","console","mounted","prevPage","nextPage","showCreateNoteModal","hideCreateNoteModal","clearSearch","searchNotes","goToStart","goToCommunity","backToStart","backToNotebook","fetchNotebookDetails","summary","handleCreated","editor","log","handleChange","getHtml","handleDestroyed","handleFocus","handleBlur","customAlert","info","customPaste","event","callback","insertText","printHtml","disable","saveNote","tags","payload","headers","body","JSON","stringify","tagNote","favoriteNote","privateNote","closeEditor"],"sources":["D:\\VUEitem\\front\\src\\components\\NoteEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- 左侧侧边栏 -->\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-item\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item notebook-button\">笔记本</div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div>\r\n      </div>\r\n      \r\n      <!-- 中间笔记本内容区 -->\r\n      <div class=\"middle-section\">\r\n        <div class=\"notebook-header\">\r\n          <h2>{{ notebookName }}</h2>\r\n          <div class=\"note-count-container\">\r\n            <p class=\"note-count\">{{ notes.length }}条笔记</p>\r\n            <i class=\"fas fa-plus add-note\" @click=\"showCreateNoteModal\"></i>\r\n          </div>\r\n  \r\n          <div class=\"search-container\">\r\n            <i class=\"fas fa-search search-icon\" @click=\"searchNotes\"></i>\r\n            <input type=\"text\" v-model=\"searchQuery\"/>\r\n            <i class=\"fas fa-times clear-icon\" @click=\"clearSearch\"></i>\r\n          </div>\r\n        </div>\r\n        \r\n        <button class=\"action-button\" @click=\"backToStart\">返回首页</button>\r\n        <button class=\"action-button\" @click=\"backToNotebook\">目录</button>\r\n        <div class=\"notebook-list\">\r\n          <div v-for=\"(note, index) in notes\" :key=\"index\" class=\"note-item\" :class=\"{ selected: selectedNote === note }\" @click=\"selectNote(note)\">\r\n            {{ note.title }}\r\n          </div>\r\n          <!-- 若有更多笔记，添加翻页功能 -->\r\n          <div v-if=\"hasMoreNotes\" class=\"pagination\">\r\n            <button @click=\"prevPage\">上一页</button>\r\n            <button @click=\"nextPage\">下一页</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 右侧笔记编辑区 -->\r\n      <div class=\"editor-section\">\r\n        <div class=\"editor-container\">\r\n          <div class=\"editor-header\">\r\n            <input type=\"text\" v-model=\"noteTitle\" placeholder=\"编辑标题\" class=\"title-input\"/>\r\n            <button class=\"icon-button\" @click=\"tagNote\"><i class=\"fas fa-tags\"></i></button>\r\n            <button class=\"icon-button\" @click=\"favoriteNote\"><i class=\"fas fa-star\"></i></button>\r\n            <button class=\"icon-button\" @click=\"privateNote\"><i class=\"fas fa-lock\"></i></button>\r\n            <button class=\"icon-button\" @click=\"closeEditor\"><i class=\"fas fa-times\"></i></button>\r\n          </div>\r\n          <div class=\"editor-body\">\r\n            <Toolbar :editor=\"editorRef\" :defaultConfig=\"toolbarConfig\" :mode=\"mode\" />\r\n            <Editor\r\n              :defaultConfig=\"editorConfig\"\r\n              :mode=\"mode\"\r\n              v-model=\"valueHtml\"\r\n              class=\"quill-editor\"\r\n              @onCreated=\"handleCreated\"\r\n              @onChange=\"handleChange\"\r\n              @onDestroyed=\"handleDestroyed\"\r\n              @onFocus=\"handleFocus\"\r\n              @onBlur=\"handleBlur\"\r\n              @customAlert=\"customAlert\"\r\n              @customPaste=\"customPaste\"\r\n            />\r\n          </div>\r\n          <div class=\"editor-footer\">\r\n            <button @click=\"saveNote\" class=\"save-button\">保存</button>\r\n            <button @click=\"insertText\">插入文本</button>\r\n            <button @click=\"printHtml\">打印 HTML</button>\r\n            <button @click=\"disable\">禁用</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 包含模态框组件 -->\r\n      <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\n  import '@wangeditor/editor/dist/css/style.css';\r\n  import { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\r\n  import { Editor, Toolbar } from '@wangeditor/editor-for-vue';\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n  \r\n  export default {\r\n  components: { Editor, Toolbar, CreateNoteModal },\r\n  props: {\r\n    id: Number,\r\n    noteName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 笔记相关数据\r\n      notes: [\r\n        { id: '1', title: '笔记1', content: '笔记1的内容'},\r\n        { id: '2', title: '笔记2', content: '笔记2的内容' },\r\n        { id: '3', title: '笔记3', content: '笔记3的内容'},\r\n        { id: '4', title: '笔记4', content: '笔记4的内容' },\r\n        { id: '5', title: '笔记5', content: '笔记5的内容'},\r\n        { id: '6', title: '笔记6', content: '笔记6的内容' },\r\n        ],\r\n      selectedNote: null,\r\n      hasMoreNotes: false,\r\n      searchQuery: '',\r\n      notebookSummary: '这里是简介',\r\n      notebookName: '这里是笔记本名',\r\n      isCreateNoteModalVisible: false,\r\n      noteTitle: this.$route.params.noteName || '', // 设置默认值\r\n      \r\n      \r\n      // 编辑器相关数据\r\n      editorRef: shallowRef(null),\r\n      valueHtml: ref('<p>hello</p>'),\r\n      toolbarConfig: {\r\n        excludeKeys: [\"insertVideo\", \"uploadVideo\", \"fullScreen\"],\r\n      },\r\n      editorConfig: { MENU_CONF: {} },\r\n    };\r\n  },\r\n  methods: {\r\n    selectNote(note) {\r\n      this.selectedNote = note;\r\n      this.$router.push({ name: 'NoteDetail', params: { notebookId: this.notebookId, noteId: note.id } });\r\n    },\r\n    async fetchNoteDetails(noteId) {\r\n        try {\r\n        const response = await fetch(`/api/notes/${this.noteId}`, {\r\n          method: 'GET',\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.noteContent = data.data.content;\r\n        } else if (data.code === 404) {\r\n          alert('资源不存在');\r\n        } else if (data.code === 501) {\r\n          alert('Token 验证失败');\r\n        } else if (data.code === 405) {\r\n          alert('不合法的请求');\r\n        } else {\r\n          alert(`获取笔记详细信息失败: ${data.message}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching note details for ID ${noteId}:`, error);\r\n      }\r\n    },\r\n    async mounted() {\r\n      const noteId = this.$route.params.noteId;\r\n      if (noteId) {\r\n        await this.fetchNoteDetails(noteId);\r\n      }\r\n    },\r\n    prevPage() {\r\n      // 实现上一页功能\r\n    },\r\n    nextPage() {\r\n      // 实现下一页功能\r\n    },\r\n    showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n    },\r\n    hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n    },\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n    },\r\n    searchNotes() {\r\n      // 实现搜索功能\r\n    },\r\n    goToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    goToCommunity() {\r\n      this.$router.push({ name: 'Community' });\r\n    },\r\n    backToStart() {\r\n      this.$router.push({ name: 'Start' });\r\n    },\r\n    backToNotebook() {\r\n      this.$router.push({ name: 'Notebook' });\r\n    },\r\n    async fetchNotebookDetails(notebookId) {\r\n      try {\r\n        const response = await fetch(`/api/notebooks/${notebookId}`, {\r\n          method: 'GET',\r\n        });\r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          this.notebookSummary = data.summary;\r\n          this.notebookName = data.name;\r\n          return data.data;\r\n        } else {\r\n          alert(`获取笔记本详细信息失败: ${data.message}`);\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching notebook details for ID ${notebookId}:`, error);\r\n        return null;\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchNotebookDetails();\r\n    },\r\n    handleCreated(editor) {\r\n      console.log('created', editor);\r\n      this.editorRef = editor;\r\n    },\r\n    handleChange(editor) {\r\n      console.log('change:', editor.getHtml());\r\n    },\r\n    handleDestroyed(editor) {\r\n      console.log('destroyed', editor);\r\n    },\r\n    handleFocus(editor) {\r\n      console.log('focus', editor);\r\n    },\r\n    handleBlur(editor) {\r\n      console.log('blur', editor);\r\n    },\r\n    customAlert(info, type) {\r\n      alert(`【自定义提示】${type} - ${info}`);\r\n    },\r\n    customPaste(editor, event, callback) {\r\n      console.log('ClipboardEvent 粘贴事件对象', event);\r\n      editor.insertText('');\r\n      callback(true);\r\n    },\r\n    insertText() {\r\n      if (this.editorRef) {\r\n        this.editorRef.insertText('hello world');\r\n      }\r\n    },\r\n    printHtml() {\r\n      if (this.editorRef) {\r\n        console.log(this.editorRef.getHtml());\r\n      }\r\n    },\r\n    disable() {\r\n      if (this.editorRef) {\r\n        this.editorRef.disable();\r\n      }\r\n    },\r\n\r\n    //添加笔记，POST请求\r\n    // 更新笔记，PUT请求\r\nasync saveNote() {\r\n  if (!this.selectedNote) {\r\n    alert('没有选中任何笔记');\r\n    return;\r\n  }\r\n\r\n  const noteId = this.selectedNote.id; // 从选中的笔记中获取ID\r\n  const title = this.noteTitle; // 从输入框获取标题\r\n  const content = this.valueHtml; // 从编辑器获取内容\r\n  const tags = this.selectedNote.tags || []; // 假设标签可以从编辑界面某处获取\r\n\r\n  const payload = {\r\n    title,\r\n    content,\r\n    tags\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`/api/notes/${noteId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    switch (data.code) {\r\n      case 200:\r\n        alert('笔记更新成功');\r\n        this.$router.push({ name: 'NoteDetail', params: { id: noteId } }); // 假设有一个笔记详情路由\r\n        break;\r\n      case 501:\r\n        alert('token 验证失败');\r\n        break;\r\n      case 405:\r\n        alert('不合法的请求');\r\n        break;\r\n      case 404:\r\n        alert('笔记不存在');\r\n        break;\r\n      default:\r\n        alert(`更新笔记失败: ${data.message}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating note:', error);\r\n    alert('更新笔记时出现错误');\r\n  }\r\n},\r\n\r\n\r\n    tagNote() {\r\n      // 实现标签功能\r\n    },\r\n    favoriteNote() {\r\n      // 实现收藏功能\r\n    },\r\n    privateNote() {\r\n      // 实现私密功能\r\n    },\r\n    closeEditor() {\r\n      this.$router.push({ name: 'NoteDetail' });\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.fetchNotebookDetails();\r\n  }\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n\r\n\r\n\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* 左侧侧边栏样式 */\r\n  .sidebar {\r\n  width: 16.6666%; /* 确保是百分比 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  border-right: 1px solid #000000;\r\n  background-color: #d3d3d3;\r\n  text-align: center;\r\n}\r\n  \r\n  .sidebar-item {\r\n    height: 20%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .notebook-button {\r\n    background-color: #696969;\r\n    color: white;\r\n  }\r\n  \r\n  .note-count-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .note-count {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  \r\n  .add-note {\r\n    cursor: pointer;\r\n    font-size: 1.2em;\r\n    color: #000000; /* 可根据需要修改颜色 */\r\n  }\r\n  \r\n  .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: #b0b0b0;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .sidebar-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  /* 中间笔记本内容区样式 */\r\n .middle-section {\r\n  width: 200px; /* 具体宽度 */\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #000000;\r\n}\r\n  \r\n  .notebook-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .search-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    background-color: #fff;\r\n  }\r\n  \r\n  .search-container input {\r\n    border: none;\r\n    outline: none;\r\n    flex-grow: 1;\r\n    padding-left: 25px; /* 为左侧图标留出空间 */\r\n    padding-right: 2px; /* 为右侧图标留出空间 */\r\n  }\r\n  \r\n  .search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .clear-icon {\r\n    position: absolute;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    background-color: #d0d0d0;\r\n    border: none;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .action-button:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n  \r\n  .notebook-list {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .note-item {\r\n    padding: 30px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .note-item.selected {\r\n    background-color: #a0e0a0;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n    /* 右侧笔记编辑区样式 */\r\n    .editor-section {\r\n    flex-grow: 1; /* 确保右侧编辑区占据剩余空间 */\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .editor-container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n\r\n \r\n  \r\n  .editor-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 10px;\r\n  }\r\n  \r\n  .title-input {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .icon-button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .editor-body {\r\n    flex-grow: 1; /* 让编辑器主体部分占据剩余空间 */\r\n    overflow-y: auto; /* 防止内容过多时溢出 */\r\n  }\r\n  \r\n  .editor-toolbar {\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .quill-editor {\r\n    height: 400px;\r\n  }\r\n  \r\n  .editor-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .save-button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .save-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAkFE,OAAO,uCAAuC;AAC9C,SAASA,eAAe,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAQ,QAAS,KAAK;AACjE,SAASC,MAAM,EAAEC,OAAM,QAAS,4BAA4B;AAC5D,OAAOC,eAAc,MAAO,uBAAuB;AAEnD,eAAe;EACfC,UAAU,EAAE;IAAEH,MAAM;IAAEC,OAAO;IAAEC;EAAgB,CAAC;EAChDE,KAAK,EAAE;IACLC,EAAE,EAAEC,MAAM;IACVC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,CACL;QAAEP,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAQ,CAAC,EAC3C;QAAET,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAS,CAAC,EAC5C;QAAET,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAQ,CAAC,EAC3C;QAAET,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAS,CAAC,EAC5C;QAAET,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAQ,CAAC,EAC3C;QAAET,EAAE,EAAE,GAAG;QAAEQ,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAS,CAAC,CAC3C;MACHC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,SAAS;MACvBC,wBAAwB,EAAE,KAAK;MAC/BC,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAAChB,QAAO,IAAK,EAAE;MAAE;;MAG9C;MACAiB,SAAS,EAAE1B,UAAU,CAAC,IAAI,CAAC;MAC3B2B,SAAS,EAAE5B,GAAG,CAAC,cAAc,CAAC;MAC9B6B,aAAa,EAAE;QACbC,WAAW,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,YAAY;MAC1D,CAAC;MACDC,YAAY,EAAE;QAAEC,SAAS,EAAE,CAAC;MAAE;IAChC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACjB,YAAW,GAAIiB,IAAI;MACxB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEZ,MAAM,EAAE;UAAEa,UAAU,EAAE,IAAI,CAACA,UAAU;UAAEC,MAAM,EAAEL,IAAI,CAAC3B;QAAG;MAAE,CAAC,CAAC;IACrG,CAAC;IACD,MAAMiC,gBAAgBA,CAACD,MAAM,EAAE;MAC3B,IAAI;QACJ,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,cAAc,IAAI,CAACH,MAAM,EAAE,EAAE;UACxDI,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,MAAM9B,IAAG,GAAI,MAAM4B,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI/B,IAAI,CAACgC,IAAG,KAAM,GAAG,EAAE;UACrB,IAAI,CAACC,WAAU,GAAIjC,IAAI,CAACA,IAAI,CAACG,OAAO;QACtC,OAAO,IAAIH,IAAI,CAACgC,IAAG,KAAM,GAAG,EAAE;UAC5BE,KAAK,CAAC,OAAO,CAAC;QAChB,OAAO,IAAIlC,IAAI,CAACgC,IAAG,KAAM,GAAG,EAAE;UAC5BE,KAAK,CAAC,YAAY,CAAC;QACrB,OAAO,IAAIlC,IAAI,CAACgC,IAAG,KAAM,GAAG,EAAE;UAC5BE,KAAK,CAAC,QAAQ,CAAC;QACjB,OAAO;UACLA,KAAK,CAAC,eAAelC,IAAI,CAACmC,OAAO,EAAE,CAAC;QACtC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsCV,MAAM,GAAG,EAAEU,KAAK,CAAC;MACvE;IACF,CAAC;IACD,MAAME,OAAOA,CAAA,EAAG;MACd,MAAMZ,MAAK,GAAI,IAAI,CAACf,MAAM,CAACC,MAAM,CAACc,MAAM;MACxC,IAAIA,MAAM,EAAE;QACV,MAAM,IAAI,CAACC,gBAAgB,CAACD,MAAM,CAAC;MACrC;IACF,CAAC;IACDa,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAChC,wBAAuB,GAAI,IAAI;IACtC,CAAC;IACDiC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACjC,wBAAuB,GAAI,KAAK;IACvC,CAAC;IACDkC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACrC,WAAU,GAAI,EAAE;IACvB,CAAC;IACDsC,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACvB,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACtC,CAAC;IACDsB,aAAaA,CAAA,EAAG;MACd,IAAI,CAACxB,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IAC1C,CAAC;IACDuB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACzB,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACtC,CAAC;IACDwB,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC1B,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC,CAAC;IACzC,CAAC;IACD,MAAMyB,oBAAoBA,CAACxB,UAAU,EAAE;MACrC,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAC,kBAAkBJ,UAAU,EAAE,EAAE;UAC3DK,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAM9B,IAAG,GAAI,MAAM4B,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI/B,IAAI,CAACgC,IAAG,KAAM,GAAG,EAAE;UACrB,IAAI,CAACzB,eAAc,GAAIP,IAAI,CAACkD,OAAO;UACnC,IAAI,CAAC1C,YAAW,GAAIR,IAAI,CAACwB,IAAI;UAC7B,OAAOxB,IAAI,CAACA,IAAI;QAClB,OAAO;UACLkC,KAAK,CAAC,gBAAgBlC,IAAI,CAACmC,OAAO,EAAE,CAAC;UACrC,OAAO,IAAI;QACb;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0CX,UAAU,GAAG,EAAEW,KAAK,CAAC;QAC7E,OAAO,IAAI;MACb;IACF,CAAC;IACD,MAAME,OAAOA,CAAA,EAAG;MACd,MAAM,IAAI,CAACW,oBAAoB,CAAC,CAAC;IACnC,CAAC;IACDE,aAAaA,CAACC,MAAM,EAAE;MACpBf,OAAO,CAACgB,GAAG,CAAC,SAAS,EAAED,MAAM,CAAC;MAC9B,IAAI,CAACvC,SAAQ,GAAIuC,MAAM;IACzB,CAAC;IACDE,YAAYA,CAACF,MAAM,EAAE;MACnBf,OAAO,CAACgB,GAAG,CAAC,SAAS,EAAED,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC;IAC1C,CAAC;IACDC,eAAeA,CAACJ,MAAM,EAAE;MACtBf,OAAO,CAACgB,GAAG,CAAC,WAAW,EAAED,MAAM,CAAC;IAClC,CAAC;IACDK,WAAWA,CAACL,MAAM,EAAE;MAClBf,OAAO,CAACgB,GAAG,CAAC,OAAO,EAAED,MAAM,CAAC;IAC9B,CAAC;IACDM,UAAUA,CAACN,MAAM,EAAE;MACjBf,OAAO,CAACgB,GAAG,CAAC,MAAM,EAAED,MAAM,CAAC;IAC7B,CAAC;IACDO,WAAWA,CAACC,IAAI,EAAE/D,IAAI,EAAE;MACtBqC,KAAK,CAAC,UAAUrC,IAAI,MAAM+D,IAAI,EAAE,CAAC;IACnC,CAAC;IACDC,WAAWA,CAACT,MAAM,EAAEU,KAAK,EAAEC,QAAQ,EAAE;MACnC1B,OAAO,CAACgB,GAAG,CAAC,uBAAuB,EAAES,KAAK,CAAC;MAC3CV,MAAM,CAACY,UAAU,CAAC,EAAE,CAAC;MACrBD,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACnD,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACmD,UAAU,CAAC,aAAa,CAAC;MAC1C;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACpD,SAAS,EAAE;QAClBwB,OAAO,CAACgB,GAAG,CAAC,IAAI,CAACxC,SAAS,CAAC0C,OAAO,CAAC,CAAC,CAAC;MACvC;IACF,CAAC;IACDW,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACrD,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACqD,OAAO,CAAC,CAAC;MAC1B;IACF,CAAC;IAED;IACA;IACJ,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAAC/D,YAAY,EAAE;QACtB8B,KAAK,CAAC,UAAU,CAAC;QACjB;MACF;MAEA,MAAMR,MAAK,GAAI,IAAI,CAACtB,YAAY,CAACV,EAAE,EAAE;MACrC,MAAMQ,KAAI,GAAI,IAAI,CAACQ,SAAS,EAAE;MAC9B,MAAMP,OAAM,GAAI,IAAI,CAACW,SAAS,EAAE;MAChC,MAAMsD,IAAG,GAAI,IAAI,CAAChE,YAAY,CAACgE,IAAG,IAAK,EAAE,EAAE;;MAE3C,MAAMC,OAAM,GAAI;QACdnE,KAAK;QACLC,OAAO;QACPiE;MACF,CAAC;MAED,IAAI;QACF,MAAMxC,QAAO,GAAI,MAAMC,KAAK,CAAC,cAAcH,MAAM,EAAE,EAAE;UACnDI,MAAM,EAAE,KAAK;UACbwC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;QAC9B,CAAC,CAAC;QAEF,MAAMrE,IAAG,GAAI,MAAM4B,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,QAAQ/B,IAAI,CAACgC,IAAI;UACf,KAAK,GAAG;YACNE,KAAK,CAAC,QAAQ,CAAC;YACf,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE,YAAY;cAAEZ,MAAM,EAAE;gBAAElB,EAAE,EAAEgC;cAAO;YAAE,CAAC,CAAC,EAAE;YACnE;UACF,KAAK,GAAG;YACNQ,KAAK,CAAC,YAAY,CAAC;YACnB;UACF,KAAK,GAAG;YACNA,KAAK,CAAC,QAAQ,CAAC;YACf;UACF,KAAK,GAAG;YACNA,KAAK,CAAC,OAAO,CAAC;YACd;UACF;YACEA,KAAK,CAAC,WAAWlC,IAAI,CAACmC,OAAO,EAAE,CAAC;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CF,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC;IAGGwC,OAAOA,CAAA,EAAG;MACR;IAAA,CACD;IACDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IACDC,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACvD,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAa,CAAC,CAAC;IAC3C;EACF,CAAC;EACD,MAAMc,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACW,oBAAoB,CAAC,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}