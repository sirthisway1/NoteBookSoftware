{"ast":null,"code":"import { readonly } from 'vue';\nexport default {\n  name: 'TreeChart',\n  props: ['model'],\n  data() {\n    return {\n      isEditing: false\n    };\n  },\n  computed: {\n    hasChild() {\n      return this.model.children && this.model.children.length;\n    }\n  },\n  methods: {\n    toggleExtend() {\n      this.model.extend = !this.model.extend;\n    },\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n      if (!this.isEditing) {\n        // 保存修改\n        this.$emit('on-update', this.model);\n      }\n    },\n    updateContent() {\n      if (this.isEditing) {\n        this.$emit('on-update', this.model);\n      }\n    }\n  }\n};","map":{"version":3,"names":["readonly","name","props","data","isEditing","computed","hasChild","model","children","length","methods","toggleExtend","extend","toggleEdit","$emit","updateContent"],"sources":["D:\\VUEitem\\front\\src\\components\\TreeNode.vue"],"sourcesContent":["<template>\r\n    <table>\r\n      <tr>\r\n        <td\r\n          :colspan=\"hasChild ? model.children.length * 2 : 1\"\r\n          :class=\"{ extend: hasChild && model.extend }\"\r\n        >\r\n          <div class=\"card\">\r\n            <div class=\"title\">\r\n              <input v-model=\"model.resName\" :readonly=\"!isEditing\" @change=\"updateContent\" class=\"name-input\">\r\n            </div>\r\n            <div class=\"body\">\r\n              <textarea v-model=\"model.message\" :readonly=\"!isEditing\" @change=\"updateContent\" class=\"content-textarea\"></textarea>\r\n            </div>\r\n            <div class=\"footer\">\r\n              <div @click=\"$emit('on-add', model)\" class=\"btn\">添加</div>\r\n              <div @click=\"toggleEdit\" class=\"btn\">{{ isEditing ? '保存' : '修改' }}</div>\r\n              <div @click=\"$emit('on-remove', model)\" class=\"btn\">删除</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"extend_handle\" v-if=\"hasChild\" @click=\"toggleExtend\">{{ model.extend ? '隐藏' : '展开' }}</div>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"hasChild && model.extend\">\r\n        <td\r\n          v-for=\"(item, index) in model.children\"\r\n          :key=\"index\"\r\n          colspan=\"2\"\r\n          class=\"child\"\r\n        >\r\n          <!--跨层级监听事件 v-on=\"$listeners\"（.native原生事件无效） -->\r\n          <transition name=\"fade\">\r\n            <TreeChart :model=\"item\"\r\n                v-on=\"$attrs\"\r\n                @on-add=\"$emit('on-add', $event)\"\r\n                @on-update=\"$emit('on-update', $event)\"\r\n                @on-remove=\"$emit('on-remove', $event)\"\r\n            />\r\n        </transition>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </template>\r\n  \r\n  <script>\r\n  import { readonly } from 'vue';\r\n  \r\n  export default {\r\n    name: 'TreeChart',\r\n    props: ['model'],\r\n    data() {\r\n      return {\r\n        isEditing: false\r\n      }\r\n    },\r\n    computed: {\r\n      hasChild () {\r\n        return this.model.children && this.model.children.length\r\n      }\r\n    },\r\n    methods: {\r\n      toggleExtend () {\r\n        this.model.extend = !this.model.extend\r\n      },\r\n      toggleEdit() {\r\n        this.isEditing = !this.isEditing\r\n        if (!this.isEditing) {\r\n         // 保存修改\r\n         this.$emit('on-update', this.model)\r\n        }\r\n      },\r\n      updateContent() {\r\n        if (this.isEditing) {\r\n            this.$emit('on-update', this.model)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\">\r\n  .card {\r\n    background: #74f5c3;\r\n    border: 2px solid #ffffff;\r\n    border-radius: 10px;\r\n    margin: 0 auto;\r\n    width: 200px;\r\n    transition: box-shadow 0.5s, transform 0.3s; // 添加 transform 过渡效果\r\n    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1); // 添加默认阴影\r\n    &:hover {\r\n      box-shadow: 0px 20px 20px rgba(0, 0, 0, 0.15); // 增强悬停时的阴影效果\r\n      transform: translateY(-5px); // 添加轻微的上移效果\r\n    }\r\n  \r\n    .title {\r\n      padding: 10px 0;\r\n      font-size: 12px;\r\n  \r\n      .name-input {\r\n            width: 90%;\r\n            text-align: center;\r\n            border: none;\r\n            outline: none;\r\n            background: transparent;\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            color: #333;\r\n            padding: 5px;\r\n            box-sizing: border-box;\r\n        }\r\n    }\r\n  \r\n    .body {\r\n      height: 100px;\r\n      background: #ffffff;\r\n      width: auto;\r\n      margin: 0 15px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: 5px; // 添加圆角，使选中效果更美观\r\n  \r\n      .content-textarea {\r\n            width: 100%;\r\n            height: 90px;\r\n            resize: none;\r\n            border: none;\r\n            outline: none;\r\n            background: transparent;\r\n            font-size: 12px;\r\n            text-align: left;\r\n            padding-top: 5px;\r\n            padding-left: 10px;\r\n            box-sizing: border-box;\r\n            transition: background-color 0.3s, box-shadow 0.3s; // 添加过渡效果\r\n  \r\n            &:focus {\r\n        background-color: rgba(116, 245, 195, 0.1); // 轻微的背景色变化\r\n        box-shadow: 0 0 0 2px rgba(116, 245, 195, 0.5); // 添加聚焦时的轮廓效果\r\n      }\r\n  \r\n      &:not(:disabled) {\r\n        cursor: text; // 当不禁用时，显示文本光标\r\n      }\r\n  \r\n      &:disabled {\r\n        cursor: default; // 当禁用时，显示默认光标\r\n        opacity: 0.7; // 轻微降低不可编辑时的透明度\r\n      }\r\n        }\r\n  \r\n        \r\n    }\r\n  \r\n    .footer {\r\n      display: flex;\r\n      margin: 5px 15px;\r\n      justify-content: space-between;\r\n      .btn {\r\n        font-size: 12px;\r\n        color: #000;\r\n        cursor: pointer;\r\n        padding: 2px 6px;\r\n        border-radius: 4px;\r\n        transition: background 0.3s, color 0.3s;\r\n        &:hover {\r\n          background: #4d6d5d;\r\n          color: #f6f6f6;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .extend_handle {\r\n    cursor: pointer;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  table {\r\n    border-collapse: separate !important;\r\n    border-spacing:  0 !important;\r\n    margin: 0 auto;\r\n  \r\n    td {\r\n      position: relative;\r\n      vertical-align: top;\r\n      padding: 0 0 70px 0;\r\n      text-align: center;\r\n      transition: all 0.3s;\r\n      &.extend {   //父节点向下的线\r\n        &::after {\r\n          content: '';\r\n          position: absolute;\r\n          left: 50%; //节点中心\r\n          bottom: 35px; //距离底部\r\n          height: 35px; //高度\r\n          border-left: 2px solid rgb(159, 186, 202);  //绘制实线\r\n          transform: translate3d(-0.7px, 0, 0); //微调\r\n        }\r\n      }\r\n      &.child {   //除两边节点外的其他节点上方线\r\n        &::before {\r\n          content: '';\r\n          position: absolute;\r\n          left: 50%;\r\n          bottom: 100%;\r\n          height: 35px;\r\n          border-left: 2px solid rgb(159, 186, 202);\r\n          transform: translate3d(-1px, 0, 0);\r\n        }\r\n        &::after {  //横线\r\n          content: '';\r\n          position: absolute;\r\n          left: 0;\r\n          right: 0;\r\n          top: -35px;\r\n          border-top: 2px solid rgb(159, 186, 202);\r\n        }\r\n        &:first-child:before,\r\n        &:last-child:before {\r\n          display: none;\r\n        }\r\n        &:first-child:after {  //最左边节点向右延伸的线\r\n          left: 50%;\r\n          height: 35px;\r\n          border: 2px solid;\r\n          border-color: rgb(159, 186, 202) transparent transparent rgb(159, 186, 202);\r\n          border-radius: 6px 0 0 0;\r\n          transform: translate3d(1px, 0, 0);\r\n        }\r\n        &:last-child:after {  //最右边向左边延伸的线\r\n          right: 50%;\r\n          height: 35px;\r\n          border: 2px solid;\r\n          border-color: rgb(159, 186, 202) rgb(159, 186, 202) transparent transparent;\r\n          border-radius: 0 6px 0 0;\r\n          transform: translate3d(-1px, 0, 0);\r\n        }\r\n        &:first-child.child:last-child::after {\r\n          left: auto;\r\n          border-radius: 0;\r\n          border-color: transparent rgb(159, 186, 202) transparent transparent;\r\n          transform: translate3d(1px, 0, 0);\r\n        }\r\n  \r\n        &.root-node {\r\n          margin-bottom: 30px;\r\n          // 可以添加其他样式来突出根节点，比如不同的背景色等\r\n        }\r\n  \r\n      }\r\n    }\r\n  }\r\n  .fade-enter-active, .fade-leave-active {\r\n    transition: opacity 0.5s;\r\n  }\r\n  .fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\r\n    opacity: 0;\r\n  }\r\n  \r\n  // 响应式调整\r\n  @media (max-width: 768px) {\r\n    table {\r\n      border-spacing: 10px 0 !important;\r\n    }\r\n    \r\n    .card {\r\n      width: 180px;\r\n    }\r\n  }\r\n  \r\n  </style>"],"mappings":"AA6CE,SAASA,QAAO,QAAS,KAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAOA,CAAA,EAAK;MACV,OAAO,IAAI,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACC,MAAK;IACzD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAWA,CAAA,EAAK;MACd,IAAI,CAACJ,KAAK,CAACK,MAAK,GAAI,CAAC,IAAI,CAACL,KAAK,CAACK,MAAK;IACvC,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACT,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAQ;MAC/B,IAAI,CAAC,IAAI,CAACA,SAAS,EAAE;QACpB;QACA,IAAI,CAACU,KAAK,CAAC,WAAW,EAAE,IAAI,CAACP,KAAK;MACnC;IACF,CAAC;IACDQ,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACX,SAAS,EAAE;QAChB,IAAI,CAACU,KAAK,CAAC,WAAW,EAAE,IAAI,CAACP,KAAK;MACtC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}