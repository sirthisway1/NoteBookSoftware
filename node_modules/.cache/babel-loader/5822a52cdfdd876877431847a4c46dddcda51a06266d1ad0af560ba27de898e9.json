{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6fdbaf62\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-username\",\n  id: \"username\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"icon-placeholder\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"/vue图片/图片1.png\",\n  alt: \"开始图标\",\n  class: \"icon-image\"\n})], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"开始\", -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nconst _hoisted_7 = {\n  class: \"main-content\"\n};\nconst _hoisted_8 = {\n  class: \"top-content\"\n};\nconst _hoisted_9 = {\n  class: \"top-left\"\n};\nconst _hoisted_10 = {\n  class: \"button-container\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"button\"\n}, \"新建笔记\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"dropdown\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dropdown-item\"\n}, \"SWOT模板思维笔记 @click=\\\"\\\"\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dropdown-item\"\n}, \"5W1H模板思维笔记\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dropdown-item\"\n}, \"时间管理四象限模板思维笔记\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  class: \"top-right\"\n};\nconst _hoisted_17 = {\n  class: \"search-bar\"\n};\nconst _hoisted_18 = [\"placeholder\"];\nconst _hoisted_19 = {\n  class: \"bottom-content\"\n};\nconst _hoisted_20 = {\n  class: \"note-list\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"side-buttons\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"side-button\"\n}, \"查看收藏列表\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"side-button\"\n}, \"查看私密列表\")], -1 /* HOISTED */));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_23 = {\n  class: \"modal-content\"\n};\nconst _hoisted_24 = {\n  class: \"modal-header\"\n};\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"新建笔记本\", -1 /* HOISTED */));\nconst _hoisted_26 = {\n  class: \"modal-body\"\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"基本信息\", -1 /* HOISTED */));\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"笔记本名称:\", -1 /* HOISTED */));\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"简介:\", -1 /* HOISTED */));\nconst _hoisted_30 = {\n  class: \"modal-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateNoteModal = _resolveComponent(\"CreateNoteModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: \"sidebar-item start-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToStart && $options.goToStart(...args))\n  }, [..._hoisted_6]), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToNotebook && $options.goToNotebook(...args))\n  }, \"笔记本\"), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToCommunity && $options.goToCommunity(...args))\n  }, \"发现社区\"), _createCommentVNode(\" <div class=\\\"sidebar-item\\\" @click=\\\"goToCommunity\\\">标签管理</div> \")]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n    class: \"dropdown-item\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.showCreateNoteModal && $options.showCreateNoteModal(...args))\n  }, \"新建日常笔记\"), _hoisted_13, _hoisted_14, _hoisted_15])])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", {\n    class: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.showNewNotebookModal && $options.showNewNotebookModal(...args))\n  }, \"新建笔记本\")])]), _createElementVNode(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.searchInput = $event),\n    placeholder: _ctx.searchMode === 'key'\n  }, null, 8 /* PROPS */, _hoisted_18), [[_vModelText, _ctx.searchInput]]), _createElementVNode(\"div\", {\n    class: \"search-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.keywordSearch && $options.keywordSearch(...args))\n  })]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredNotes, note => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: note.noteId,\n      class: \"note-item\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(note.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"最后修改日期: \" + _toDisplayString($options.formatDate(note.lastModified)), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createTextVNode(\"标签： \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(note.tags, (tag, index) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: index,\n        class: \"tag\"\n      }, _toDisplayString(tag) + _toDisplayString(index < note.tags.length - 1 ? ', ' : ''), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _hoisted_21, _createCommentVNode(\" 新建笔记本的模态框 \"), $data.isModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_hoisted_25, _createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.hideNewNotebookModal && $options.hideNewNotebookModal(...args))\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_26, [_hoisted_27, _createElementVNode(\"div\", null, [_hoisted_28, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newNotebookName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newNotebookName]])]), _createElementVNode(\"div\", null, [_hoisted_29, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.newNotebookDescription = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newNotebookDescription]])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.createNotebook && $options.createNotebook(...args))\n  }, \"创建\")])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 包含模态框组件 \"), _createVNode(_component_CreateNoteModal, {\n    visible: $data.isCreateNoteModalVisible,\n    onClose: $options.hideCreateNoteModal\n  }, null, 8 /* PROPS */, [\"visible\", \"onClose\"])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","src","alt","_hoisted_4","_hoisted_5","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","username","onClick","_cache","args","$options","goToStart","_hoisted_6","goToNotebook","goToCommunity","_createCommentVNode","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","showCreateNoteModal","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","showNewNotebookModal","_hoisted_17","type","$event","_ctx","searchInput","placeholder","searchMode","_hoisted_18","keywordSearch","_hoisted_19","_hoisted_20","_Fragment","_renderList","filteredNotes","note","noteId","name","formatDate","lastModified","_createTextVNode","tags","tag","index","length","_hoisted_21","isModalVisible","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","hideNewNotebookModal","_hoisted_26","_hoisted_27","_hoisted_28","newNotebookName","_hoisted_29","newNotebookDescription","_hoisted_30","createNotebook","_createVNode","_component_CreateNoteModal","visible","isCreateNoteModalVisible","onClose","hideCreateNoteModal"],"sources":["D:\\VUEitem\\front\\src\\components\\Start.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-username\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item start-button\" @click=\"goToStart\">\r\n          <div class=\"icon-placeholder\"><img src=\"/vue图片/图片1.png\" alt=\"开始图标\" class=\"icon-image\"></div>\r\n          <span>开始</span>\r\n        </div>\r\n        <div class=\"sidebar-item\" @click=\"goToNotebook\">笔记本</div>\r\n        <div class=\"sidebar-item\" @click=\"goToCommunity\">发现社区</div>\r\n        <!-- <div class=\"sidebar-item\" @click=\"goToCommunity\">标签管理</div> -->\r\n      </div>\r\n      <div class=\"main-content\">\r\n        <div class=\"top-content\">\r\n          <div class=\"top-left\">\r\n            <div class=\"button-container\">\r\n              <div class=\"button\">新建笔记</div>\r\n              <div class=\"dropdown\">\r\n                <div class=\"dropdown-item\" @click=\"showCreateNoteModal\">新建日常笔记</div>\r\n                <div class=\"dropdown-item\">SWOT模板思维笔记 @click=\"\"</div>\r\n                <div class=\"dropdown-item\">5W1H模板思维笔记</div>\r\n                <div class=\"dropdown-item\">时间管理四象限模板思维笔记</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"top-right\">\r\n            <div class=\"button\" @click=\"showNewNotebookModal\">新建笔记本</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"search-bar\">\r\n          <input type=\"text\" v-model=\"searchInput\" :placeholder=\"searchMode === 'key'\" placeholder=\"关键字搜索\">\r\n          <div class=\"search-button\" @click=\"keywordSearch\"></div>\r\n        </div>\r\n        <div class=\"bottom-content\">\r\n          <div class=\"note-list\">\r\n            <div v-for=\"note in filteredNotes\" :key=\"note.noteId\" class=\"note-item\">\r\n              <h3>{{ note.name }}</h3>\r\n              <p>最后修改日期: {{ formatDate(note.lastModified) }}</p>\r\n              <p>标签：\r\n                <span v-for=\"(tag, index) in note.tags\" :key=\"index\" class=\"tag\">\r\n                {{ tag }}{{ index < note.tags.length - 1 ? ', ' : '' }}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"side-buttons\">\r\n        <div class=\"side-button\">查看收藏列表</div>\r\n        <div class=\"side-button\">查看私密列表</div>\r\n      </div>\r\n  \r\n      <!-- 新建笔记本的模态框 -->\r\n      <div class=\"modal\" v-if=\"isModalVisible\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h2>新建笔记本</h2>\r\n            <span class=\"close\" @click=\"hideNewNotebookModal\">&times;</span>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <h3>基本信息</h3>\r\n            <div>\r\n              <label>笔记本名称:</label>\r\n              <input type=\"text\" v-model=\"newNotebookName\">\r\n            </div>\r\n            <div>\r\n              <label>简介:</label>\r\n              <textarea v-model=\"newNotebookDescription\"></textarea>\r\n            </div>\r\n            <div class=\"modal-actions\">\r\n              <button @click=\"createNotebook\">创建</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 包含模态框组件 -->\r\n      <CreateNoteModal :visible=\"isCreateNoteModalVisible\" @close=\"hideCreateNoteModal\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import CreateNoteModal from './CreateNoteModal.vue';\r\n  export default {\r\n    components: {\r\n    CreateNoteModal,\r\n  },\r\n  data() {\r\n      return {\r\n        username: '测试用户', \r\n        isModalVisible: false,\r\n        isCreateNoteModalVisible: false,\r\n        newNotebookName: '',\r\n        newNotebookDescription: '',\r\n        notes:[\r\n        {\r\n          noteId: '1',\r\n          name: '工作计划',\r\n          lastModified: '2024-07-07T08:30:00Z',\r\n          content: '这是工作计划的内容...',\r\n          tags: ['工作', '会议']\r\n        },\r\n        {\r\n          noteId: '2',\r\n          name: '学习笔记',\r\n          lastModified: '2024-07-06T15:45:00Z',\r\n          content: '这是学习笔记的...',\r\n          tags: ['学习', '编程']\r\n        },\r\n        {\r\n          noteId: '3',\r\n          name: '日记',\r\n          lastModified: '2024-07-05T22:10:00Z',\r\n          content: '这是日记的内容...',\r\n          tags: ['生活', '购物']\r\n        },\r\n        {\r\n          noteId: '4',\r\n          name: '项目ideas',\r\n          lastModified: '2024-07-04T11:20:00Z',\r\n          content: '这是项目ideas的内容...',\r\n          tags: ['旅行', '摄影']\r\n        },\r\n        {\r\n          noteId: '5',\r\n          name: '购物清单',\r\n          lastModified: '2024-07-03T09:00:00Z',\r\n          content: '这是购物清单的内容...',\r\n          tags: ['美食', '烹饪']\r\n        }\r\n        ], //存储笔记列表\r\n        searchKeyword: '',  //搜索关键字\r\n        filteredNotes: [],  //符合的笔记\r\n      };\r\n    },\r\n    methods: {\r\n      goToStart() {\r\n        this.$router.push({ name: 'Start' });\r\n      },\r\n      goToNotebook() {\r\n        this.$router.push({ name: 'Notebook' }); // 这里需要在路由中添加对应路径\r\n      },\r\n      goToCommunity() {\r\n        this.$router.push({ name: 'Community' }); // 这里需要在路由中添加对应路径\r\n      },\r\n      // goToFavorites() {\r\n      // this.$router.push({ name: 'FavoriteNotes' });\r\n      // },\r\n      goToPrivate() {\r\n        this.$router.push({ name: 'PrivateNotes' });\r\n      },\r\n      keywordSearch() {\r\n        // 处理搜索逻辑\r\n        // if (!this.searchKeyword.trim()) {\r\n        //   this.filteredNotes = this.notes;\r\n        //   return;\r\n        // }\r\n\r\n        const keyword = this.searchKeyword.toLowerCase().trim();\r\n\r\n        if (!keyword) {\r\n          this.filteredNotes = this.notes;\r\n          return;\r\n        }\r\n\r\n        this.filteredNotes = this.notes.filter(note => \r\n          note.name.toLowerCase().includes(keyword) || \r\n          note.content.toLowerCase().includes(keyword)\r\n        );\r\n      },\r\n      showCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = true;\r\n    },\r\n    hideCreateNoteModal() {\r\n      this.isCreateNoteModalVisible = false;\r\n    },\r\n      showNewNotebookModal() {\r\n        this.isModalVisible = true;\r\n      },\r\n      hideNewNotebookModal() {\r\n        this.isModalVisible = false;\r\n      },\r\n      async createNotebook() {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          alert('请先登录');\r\n          return;\r\n        }\r\n  \r\n        const response = await fetch('/api/notebooks/createNotebooks', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n          body: JSON.stringify({\r\n            name: this.newNotebookName,\r\n            summary: this.newNotebookDescription,\r\n          })\r\n        });\r\n  \r\n        const data = await response.json();\r\n        if (data.code === 200) {\r\n          alert('笔记本创建成功');\r\n          this.hideNewNotebookModal();\r\n          // 处理笔记本创建成功后的逻辑\r\n        } else if (data.code === 501) {\r\n          alert('token验证失败');\r\n        } else {\r\n          alert('创建笔记本失败');\r\n        }\r\n      },\r\n\r\n/*模拟时不需要*/ \r\n      // async search() {\r\n      //   if (!this.searchKeyword.trim()) {\r\n      //     this.fetchNotes(); // 如果搜索框为空,获取所有笔记\r\n      //     return;\r\n      //   }\r\n\r\n      //   const token = localStorage.getItem('token');\r\n      //   if (!token) {\r\n      //     alert('请先登录');\r\n      //     return;\r\n      //   }\r\n\r\n      //   try {\r\n      //     const response = await fetch(`/api/notes?keyword=${encodeURIComponent(this.searchKeyword)}`, {\r\n      //       method: 'GET',\r\n      //       headers: {\r\n      //         'Authorization': `Bearer ${token}`\r\n      //       }\r\n      //     });\r\n\r\n      //     const data = await response.json();\r\n      //     if (data.code === 200) {\r\n      //       this.filteredNotes = data.data;\r\n      //     } else if (data.code === 501) {\r\n      //       alert('token验证失败');\r\n      //     } else if (data.code === 407) {\r\n      //       alert('没有找到匹配的笔记');\r\n      //       this.filteredNotes = [];\r\n      //     } else {\r\n      //       alert('搜索失败');\r\n      //     }\r\n      //   } catch (error) {\r\n      //     console.error('搜索笔记时出错:', error);\r\n      //     alert('搜索失败');\r\n      //   }\r\n      // },\r\n\r\n      // async fetchNotes() {\r\n      // const token = localStorage.getItem('token');\r\n      // if (!token) {\r\n      //   alert('请先登录');\r\n      //   return;\r\n      // }\r\n\r\n      // try {\r\n      //   // 获取所有笔记ID\r\n      //   const response = await fetch('/api/notes', {\r\n      //     method: 'GET',\r\n      //     headers: {\r\n      //       'Authorization': `Bearer ${token}`\r\n      //     }\r\n      //   });\r\n\r\n      //   const data = await response.json();\r\n      //   if (data.code === 200) {\r\n      //     // 获取每个笔记的详细信息\r\n      //     const notePromises = data.data.noteId.map(id => this.fetchNoteDetails(id));\r\n      //     this.notes = await Promise.all(notePromises);\r\n      //   } else if (data.code === 501) {\r\n      //     alert('token验证失败');\r\n      //   } else {\r\n      //     alert('获取笔记列表失败');\r\n      //   }\r\n      // } catch (error) {\r\n      //   console.error('获取笔记列表时出错:', error);\r\n      //   alert('获取笔记列表失败');\r\n      // }\r\n      // },\r\n\r\n      // async fetchNoteDetails(noteId) {\r\n      //   const token = localStorage.getItem('token');\r\n      //   const response = await fetch(`/api/${noteId}`, {\r\n      //     method: 'GET',\r\n      //     headers: {\r\n      //       'Authorization': `Bearer ${token}`\r\n      //     }\r\n      //   });\r\n\r\n      //   const data = await response.json();\r\n      //   if (data.code === 200) {\r\n      //     return data.data;\r\n      //   } else {\r\n      //     console.error(`获取笔记 ${noteId} 详情失败`);\r\n      //     return null;\r\n      //   }\r\n      // },\r\n\r\n      // formatDate(dateString) {\r\n      // const date = new Date(dateString);\r\n      // return date.toLocaleString(); // 格式化日期\r\n      // }\r\n\r\n      formatDate(dateString) {   //模拟formatDate\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString('zh-CN', { \r\n        year: 'numeric', \r\n        month: '2-digit', \r\n        day: '2-digit', \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      });\r\n    }\r\n    },\r\n    watch: {\r\n      searchKeyword() {\r\n        this.keywordSearch();\r\n      }\r\n    },\r\n    //模拟时不需要\r\n    mounted() {\r\n      // this.fetchNotes(); // 组件挂载时获取笔记列表\r\n      this.filteredNotes = this.notes;\r\n    }\r\n    \r\n  };\r\n  </script>\r\n  \r\n<style scoped>\r\n  .container {\r\n  display: flex;\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n  \r\n.sidebar {\r\n  width: 200px;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-right: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.sidebar-item {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  cursor: pointer;\r\n  color: #333;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.sidebar-username {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.icon-placeholder {\r\n    width: 60px; /* 设置圆形宽度 */\r\n    height: 60px; /* 设置圆形高度 */\r\n    background-color: #87d37c; /* 设置圆形背景颜色 */\r\n    border-radius: 50%; /* 使元素为圆形 */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px; /* 圆形与文字之间的间距 */\r\n}\r\n\r\n.icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 确保图片填满圆形且不变形 */\r\n}\r\n\r\n.sidebar-item span {\r\n    font-size: 14px; /* 设置文字大小 */\r\n}\r\n\r\n/* 选中效果 */\r\n.start-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  margin: 10px 20px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.start-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n\r\n\r\n.main-content {\r\n  margin-left: 200px; /* 与sidebar宽度相同 */\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 20px;\r\n  overflow-y: auto;\r\n  height: 100vh;\r\n}\r\n  .top-content {\r\n    height: 7%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .top-left, .top-right {\r\n    position: relative; /* 相对定位 */\r\n  }\r\n  \r\n  .button-container {\r\n    position: relative; /* 相对定位 */\r\n  }\r\n  \r\n  .button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 150px;\r\n    height: 50px;\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    border-radius: 25px;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n  }\r\n\r\n  \r\n  .dropdown {\r\n    display: none; /* 默认隐藏 */\r\n    position: absolute; /* 绝对定位 */\r\n    top: 100%; /* 紧挨着按钮下面 */\r\n    left: 0;\r\n    width: 100%; /* 与按钮同宽 */\r\n    background-color: #e0e0e0;\r\n    border-radius: 5px;\r\n    flex-direction: column;\r\n    z-index: 1; /* 确保下拉框在前面 */\r\n  }\r\n  \r\n  .dropdown-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 150px; /* 与按钮同宽 */\r\n    height: 60px; /* 与按钮同高 */\r\n    border-top: 1px solid #ccc;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .button-container:hover .dropdown {\r\n    display: flex; /* 鼠标悬停时显示下拉框 */\r\n  }\r\n  \r\n  .search-bar {\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    position: relative;\r\n  }\r\n  \r\n  .search-bar input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    margin-top: 25px;\r\n  }\r\n  \r\n  .search-button {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    right: 30px;\r\n    cursor: pointer;\r\n    margin-top: 25px;\r\n  }\r\n  \r\n  .bottom-content {\r\n    margin-top: 20px;\r\n    padding: 0 20px;\r\n    flex-grow: 1; /* 让 bottom-content 占据剩余空间 */\r\n    display: flex;\r\n    position: relative;\r\n  }\r\n  \r\n  .note-list {\r\n    flex-grow: 1; /* 让 note-list 占据剩余空间 */\r\n    background-color: #d3d3d3;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    padding:20px;\r\n    align-items: center;\r\n    \r\n    margin-bottom: 30px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  .side-buttons {\r\n    width: 150px; /* 调整按钮宽度 */\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    padding-right: 20px;\r\n    padding-top: 200px; /* 增加左边间隔 */\r\n  }\r\n  \r\n  .side-button {\r\n    background-color: #8b4513;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding: 10px; /* 调整按钮内边距 */\r\n    margin: 5px 0; /* 调整按钮间距 */\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    font-size: 1em; /* 调整按钮字体大小 */\r\n    height: 50px; /* 调整按钮高度 */\r\n  }\r\n  \r\n  .modal {\r\n    display: flex;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0,0,0,0.4);\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  /* 新建笔记本UI*/\r\n  .modal-content {\r\n    background-color: #fefefe;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: 40%;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 25%;\r\n  }\r\n  \r\n  .modal-header h2 {\r\n    margin: 0;\r\n    flex: 1;\r\n  }\r\n  \r\n  \r\n  .modal-header .close {\r\n    color: #aaa;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .modal-header .close:hover,\r\n  .modal-header .close:focus {\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .modal-body {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .modal-body h3 {\r\n    margin: 10px 0;\r\n  }\r\n  \r\n  .modal-body div {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .modal-body label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .modal-body input, .modal-body textarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  .modal-body textarea {\r\n    height: 100px; /* 设置简介文本框的高度 */\r\n    resize: none;\r\n  }\r\n  \r\n  .modal-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .modal-actions button {\r\n    padding: 10px 20px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .note-item {\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n    transition: var(--transition);\r\n    width: calc(33.333% - 20px);\r\n  }\r\n\r\n  .note-item:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n  }\r\n\r\n  .note-item h3 {\r\n    margin: 0 0 10px 0;\r\n    color: var(--primary-color);\r\n  }\r\n\r\n  .note-item p {\r\n    margin: 0;\r\n    font-size: 0.9em;\r\n    color: #666;\r\n  }\r\n</style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}