{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2645ce9a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-username\",\n  id: \"username\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"icon-placeholder\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"/vue图片/图片3.png\",\n  alt: \"开始图标\",\n  class: \"icon-image\"\n})], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"发现社区\", -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nconst _hoisted_7 = {\n  class: \"main-content\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"note-detail\"\n};\nconst _hoisted_9 = {\n  class: \"note-info\"\n};\nconst _hoisted_10 = {\n  class: \"note-content\"\n};\nconst _hoisted_11 = {\n  class: \"comments-section\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"评论\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"add-comment\"\n};\nconst _hoisted_14 = {\n  class: \"comment-list\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToStart && $options.goToStart(...args))\n  }, \"开始\"), _createElementVNode(\"div\", {\n    class: \"sidebar-item\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToNotebook && $options.goToNotebook(...args))\n  }, \"笔记本\"), _createElementVNode(\"div\", {\n    class: \"sidebar-item community-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToCommunity && $options.goToCommunity(...args))\n  }, [..._hoisted_6]), _createCommentVNode(\" <div class=\\\"sidebar-item\\\" @click=\\\"goToTags\\\">标签管理</div> \")]), _createElementVNode(\"div\", _hoisted_7, [$data.note ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"h1\", null, _toDisplayString($data.note.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", null, \"作者: \" + _toDisplayString($data.note.username), 1 /* TEXT */), _createElementVNode(\"span\", null, \"创建时间: \" + _toDisplayString($options.formatDate($data.note.createdAt)), 1 /* TEXT */), _createElementVNode(\"span\", null, \"点赞数: \" + _toDisplayString($data.likeCount), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.toggleLike && $options.toggleLike(...args)),\n    class: _normalizeClass({\n      'liked': $data.isLiked\n    })\n  }, _toDisplayString($data.isLiked ? '取消点赞' : '点赞'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.note.content), 1 /* TEXT */), _createCommentVNode(\" 评论部分 \"), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newComment = $event),\n    placeholder: \"添加评论...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.postComment && $options.postComment(...args))\n  }, \"发表评论\")]), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.commentId,\n      class: \"comment-item\"\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(comment.createdBy.username) + \":\", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString($options.formatDate(comment.createdAt)), 1 /* TEXT */), $options.canDeleteComment(comment) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.deleteComment(comment.commentId)\n    }, \"删除\", 8 /* PROPS */, _hoisted_15)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \"加载中...\"))])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","src","alt","_hoisted_4","_hoisted_5","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","username","onClick","_cache","args","$options","goToStart","goToNotebook","goToCommunity","_hoisted_6","_createCommentVNode","_hoisted_7","note","_hoisted_8","title","_hoisted_9","formatDate","createdAt","likeCount","toggleLike","_normalizeClass","isLiked","_hoisted_10","content","_hoisted_11","_hoisted_12","_hoisted_13","$event","newComment","placeholder","postComment","_hoisted_14","_Fragment","_renderList","comments","comment","commentId","createdBy","canDeleteComment","deleteComment","_hoisted_15","_hoisted_16"],"sources":["D:\\VUEitem\\front\\src\\components\\CommunityDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"sidebar\">\r\n        <div class=\"sidebar-username\" id=\"username\">{{ username }}</div>\r\n        <div class=\"sidebar-item\" @click=\"goToStart\">开始</div>\r\n        <div class=\"sidebar-item\" @click=\"goToNotebook\">笔记本</div>\r\n        <div class=\"sidebar-item community-button\" @click=\"goToCommunity\">\r\n          <div class=\"icon-placeholder\"><img src=\"/vue图片/图片3.png\" alt=\"开始图标\" class=\"icon-image\"></div>\r\n          <span>发现社区</span>\r\n        </div>\r\n        <!-- <div class=\"sidebar-item\" @click=\"goToTags\">标签管理</div> -->\r\n      </div>\r\n      <div class=\"main-content\">\r\n        <div class=\"note-detail\" v-if=\"note\">\r\n          <h1>{{ note.title }}</h1>\r\n          <div class=\"note-info\">\r\n            <span>作者: {{ note.username }}</span>\r\n            <span>创建时间: {{ formatDate(note.createdAt) }}</span>\r\n            <span>点赞数: {{ likeCount }}</span>\r\n            <button @click=\"toggleLike\" :class=\"{ 'liked': isLiked }\">\r\n            {{ isLiked ? '取消点赞' : '点赞' }}\r\n          </button>\r\n          </div>\r\n          <div class=\"note-content\">\r\n            {{ note.content }}\r\n          </div>\r\n            <!-- 评论部分 -->\r\n        <div class=\"comments-section\">\r\n          <h3>评论</h3>\r\n          <div class=\"add-comment\">\r\n            <textarea v-model=\"newComment\" placeholder=\"添加评论...\"></textarea>\r\n            <button @click=\"postComment\">发表评论</button>\r\n          </div>\r\n          <div class=\"comment-list\">\r\n            <div v-for=\"comment in comments\" :key=\"comment.commentId\" class=\"comment-item\">\r\n              <strong>{{ comment.createdBy.username }}:</strong>\r\n              <p>{{ comment.content }}</p>\r\n              <span>{{ formatDate(comment.createdAt) }}</span>\r\n              <button v-if=\"canDeleteComment(comment)\" @click=\"deleteComment(comment.commentId)\">删除</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div v-else>加载中...</div>\r\n\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '测试用户',\r\n        note: null,\r\n        comments: [],\r\n        likeCount: 0,\r\n      isLiked: false,\r\n      newComment: '',\r\n      };\r\n    },\r\n    methods: {\r\n      goToStart() {\r\n        this.$router.push({ name: 'Start' });\r\n      },\r\n      goToNotebook() {\r\n        this.$router.push({ name: 'Notebook' });\r\n      },\r\n      goToCommunity() {\r\n        this.$router.push({ name: 'Community' });\r\n      },\r\n      goToTags() {\r\n        // 如果有标签管理页面，需要添加对应的路由\r\n        this.$router.push({ name: 'Tags' });\r\n      },\r\n      async fetchNoteDetail() {\r\n        const noteId = this.$route.params.noteId;\r\n\r\n        // 模拟API延迟\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n        // 模拟从Community.vue中获取的笔记数据\r\n        const mockNotes = [\r\n            {\r\n            noteId: \"123456\",\r\n            username: \"用户1\",\r\n            title: \"My Note 1\",\r\n            content: \"你好锕 Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here. Note content 1 here.\",\r\n            tags: [\"tag1\", \"tag2\"],\r\n            type: 2,\r\n            isPrivate: false,\r\n            createdAt: \"2023-04-01T12:00:00Z\",\r\n            updatedAt: \"2023-04-01T12:00:00Z\",\r\n            },\r\n            {\r\n            noteId: \"654321\",\r\n            username: \"用户2\",\r\n            title: \"My Note 2\",\r\n            content: \"你好 content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here. Note content 2 here.\",\r\n            tags: [\"tag3\"],\r\n            type: 2,\r\n            isPrivate: false,\r\n            createdAt: \"2023-05-01T12:00:00Z\",\r\n            updatedAt: \"2023-05-01T12:00:00Z\",\r\n            },\r\n            // ... 其他笔记数据 ...\r\n            \r\n        ];\r\n\r\n        // 查找对应noteId的笔记\r\n        const note = mockNotes.find(note => note.noteId === noteId);\r\n\r\n        if (note) {\r\n            this.note = note;\r\n        } else {\r\n            // 如果没有找到对应的笔记，设置一个默认值或显示错误信息\r\n            this.note = {\r\n            noteId: noteId,\r\n            username: \"未知用户\",\r\n            title: \"笔记未找到\",\r\n            content: \"抱歉，未找到对应的笔记内容。\",\r\n            createdAt: new Date().toISOString(),\r\n            };\r\n        }\r\n        await this.fetchComments();\r\n        await this.fetchLikeCount();\r\n        await this.checkIfLiked();\r\n    },\r\n\r\n    async toggleLike() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.isLiked = !this.isLiked;\r\n      this.likeCount += this.isLiked ? 1 : -1;\r\n    },\r\n\r\n    async fetchLikeCount() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.likeCount = Math.floor(Math.random() * 100);\r\n    },\r\n\r\n    async checkIfLiked() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.isLiked = Math.random() < 0.5;\r\n    },\r\n\r\n    async fetchComments() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      // 模拟评论数据\r\n      this.comments = [\r\n        { commentId: 'comment1', content: '这是一条测试评论1', createdAt: \"2023-07-07T10:00:00Z\", createdBy: { username: 'User1' } },\r\n        { commentId: 'comment2', content: '这是一条测试评论2', createdAt: \"2023-07-07T11:00:00Z\", createdBy: { username: 'User2' } },\r\n        { commentId: 'comment3', content: '这是一条测试评论3', createdAt: \"2023-07-07T12:00:00Z\", createdBy: { username: 'User3' } },\r\n      ];\r\n    },\r\n\r\n    async postComment() {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      const newCommentObj = {\r\n        commentId: 'comment' + (this.comments.length + 1),\r\n        content: this.newComment,\r\n        createdAt: new Date().toISOString(),\r\n        createdBy: { username: this.username }\r\n      };\r\n\r\n      this.comments.push(newCommentObj);\r\n      this.newComment = '';\r\n    },\r\n\r\n    async deleteComment(commentId) {\r\n      // 模拟API请求延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n      this.comments = this.comments.filter(comment => comment.commentId !== commentId);\r\n    },\r\n\r\n    canDeleteComment(comment) {\r\n      return this.note.username === this.username || comment.createdBy.username === this.username;\r\n    },\r\n\r\n      formatDate(dateString) {\r\n        return new Date(dateString).toLocaleString();\r\n      },\r\n\r\n    },\r\n    async mounted() {\r\n      await this.fetchNoteDetail();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.container {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.sidebar {\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-right: 1px solid #e0e0e0;\r\n  background-color: #ffffff;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  box-shadow: 2px 0 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.sidebar-item {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  cursor: pointer;\r\n  color: #333;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.sidebar-username {\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.community-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  margin: 10px 20px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.community-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.main-content {\r\n  flex-grow: 1;\r\n  padding: 30px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.note-detail {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.note-detail h1 {\r\n  font-size: 28px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.note-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.note-content {\r\n  line-height: 1.8;\r\n  white-space: pre-wrap;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 确保图片填满圆形且不变形 */\r\n}\r\n\r\n.like-button {\r\n  background-color: #f0f0f0;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.like-button:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.liked {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 30px;\r\n}\r\n\r\n.comments-section h3 {\r\n  font-size: 20px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment textarea {\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n\r\n.add-comment button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.add-comment button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.comment-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.comment-item {\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 15px 0;\r\n}\r\n\r\n.comment-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.comment-item strong {\r\n  color: #333;\r\n}\r\n\r\n.comment-item p {\r\n  margin: 10px 0;\r\n  color: #666;\r\n}\r\n\r\n.comment-item span {\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n.comment-item button {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.comment-item button:hover {\r\n  background-color: #d32f2f;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}